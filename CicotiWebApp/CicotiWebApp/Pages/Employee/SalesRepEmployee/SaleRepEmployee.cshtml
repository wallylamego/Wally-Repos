@page  "{LinkID?}"

@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@functions{
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Model.HttpContext).RequestToken;
    }
}
@model CicotiWebApp.Pages.Employee.SalesRepEmployee.SalesRepEmployeeModel

@{
    ViewData["Title"] = "Sales Rep Employee Link: Edit/Create";
    Layout = "~/Pages/_LayoutDataTables.cshtml";
}

<h4>Add Edit Sales Rep Employee Link</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <input type="hidden" asp-for="SalesRepEmployLink.SalesRepCodeEmployeeNoLinkID" id="SalesRepCodeEmployeeNoLinkID" />
        <input type="hidden" asp-for="SalesRepEmployLink.EmployeeID" id="employeeID" />
        <input type="hidden" asp-for="SalesRepEmployLink.SalesRepID" id="salesRepID" />
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div id="divEmployee">
            <div id="EmployeeSection">
                <div class="input-group" id="divEmployeeBtns">
                    <span class="input-group-btn">
                        <input type="button" value="Find Employee." class="btn btn-default" id="findEmployeeBtn" />
                    </span>
                </div>
                <br />
                <div id="divEmployeeTable" style="width:90%; margin:0 auto;">
                    <table id="EmployeeTable" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0">
                        <thead>
                            <tr>
                                <th>EmployeeID</th>
                                <th>Employee Number</th>
                                <th>Name</th>
                                <th>Job Description</th>
                                <th>Department</th>
                                <th>Branch</th>
                                <th>Cost Centre</th>
                                <th>Select</th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
            <div id="divselectedEmployee">
                <div class="form-group">
                    <label asp-for="SalesRepEmployLink.Employee.EmployeeNo" class="control-label"></label>
                    <input asp-for="SalesRepEmployLink.Employee.EmployeeNo" class="form-control" id="employeeNo" />
                    <span asp-validation-for="SalesRepEmployLink.Employee.EmployeeNo" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="SalesRepEmployLink.Employee.FirstName" class="control-label"></label>
                    <input asp-for="SalesRepEmployLink.Employee.FirstName" class="form-control" id="firstName" />
                    <span asp-validation-for="SalesRepEmployLink.Employee.FirstName" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="SalesRepEmployLink.Employee.LastName" class="control-label"></label>
                    <input asp-for="SalesRepEmployLink.Employee.LastName" class="form-control" id="lastName" />
                    <span asp-validation-for="SalesRepEmployLink.Employee.LastName" class="text-danger"></span>
                </div>
            </div>
        </div>
        <div id="divSaleRep">
            <div id="SaleRepSection">
                <div class="input-group" id="divSaleRepBtns">
                    <span class="input-group-btn">
                        <input type="button" value="Find SaleRep." class="btn btn-default" id="findSalesRepBtn" />
                    </span>
                </div>
                <br />
                <div id="divSalesRepTable" style="width:90%; margin:0 auto;">
                    <table id="SalesRepTable" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0">
                        <thead>
                            <tr>
                                <th>SalesRepID</th>
                                <th>Sales Rep Code</th>
                                <th>Sales Rep Name</th>
                                <th>Select</th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
            <div id="divselectedSaleRep">
                <div class="form-group">
                    <label asp-for="SalesRepEmployLink.SalesRep.SalesRepCode" class="control-label"></label>
                    <input asp-for="SalesRepEmployLink.SalesRep.SalesRepCode" class="form-control" id="salesRepCode" />
                    <span asp-validation-for="SalesRepEmployLink.SalesRep.SalesRepCode" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="SalesRepEmployLink.SalesRep.SalesRepName" class="control-label"></label>
                    <input asp-for="SalesRepEmployLink.SalesRep.SalesRepName" class="form-control" id="salesRepName" />
                    <span asp-validation-for="SalesRepEmployLink.SalesRep.SalesRepName" class="text-danger"></span>
                </div>
            </div>
        </div>
        <div class="form-group">
            <input type="submit" value="Save" class="btn btn-default" id="savebtn" />
        </div>
    </div>
</div>

<div>
    <a asp-page="Listing">Back to List</a>
</div>

@section Scripts {
    @await Html.PartialAsync("_ModalPartial")
    @await Html.PartialAsync("_ModalConfirmPartial")
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script type="text/javascript">
        var SaleRepEmployeeToSave = {};
        function updateEmployeeInputFields(data) {
            var selectedEmployee = {};
            selectedEmployee = JSON.parse(data);
            console.log(selectedEmployee.employeeID);
            $("#employeeID").val(selectedEmployee.employeeID);
            $("#employeeNo").val(decodeURIComponent(selectedEmployee.employeeNo));
            $("#firstName").val(decodeURIComponent(selectedEmployee.name));
            $("#lastName").val(decodeURIComponent(selectedEmployee.name));
            $("#divEmployeeTable").hide();
        }

        function updateSalesRepInputFields(data) {
            var selectedSalesRep = {};
            selectedSalesRep = JSON.parse(data);
            console.log(selectedSalesRep.salesRepID);
            $("#salesRepID").val(selectedSalesRep.salesRepID);
            $("#salesRepCode").val(decodeURIComponent(selectedSalesRep.salesRepCode));
            $("#salesRepName").val(decodeURIComponent(selectedSalesRep.salesRepName));
            $("#divSalesRepTable").hide();
        }

        function GetEmployeeData() {
             $("#EmployeeTable").on('xhr.dt', function (e, settings, json, xhr) {
            }).DataTable({
                lengthMenu: [25, 100, 150, 200],
                dom: '<lfB<t>ip>',
                buttons: ['excel', 'copy', 'csv', 'pdf', 'print'],
                "fixedHeader": {
                    "header": true,
                    "footer": true
                },
                "responsive": true,
                "processing": true, // for show progress bar
                "serverSide": true, // for process server side
                "filter": true, // this is for disable filter (search box)
                "orderMulti": false, // for disable multiple column at once
                "ajax": {

                    "url": "/Employee/Index?handler=Paging",
                     "headers":
                        {
                            "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                        },
                    "type": "POST",
                    /*"contentType": "application/x-www-form-urlencoded",*/
                    "datatype": "json"
                },
                "columnDefs":
                [   {
                        /*Employee ID is not visible and is not searchable*/
                        "targets": [0],
                        "visible": false,
                        "searchable": true
                    },
                    {
                        /*Reports To Employee No is visible and is searchable*/
                        "targets": [1],
                        "visible": false,
                        "searchable": true
                    },
                    {
                        /*Name is visible and is not searchable*/
                        "targets": [2],
                        "visible": true,
                        "searchable": true,
                        "orderable": true
                    },
                    {
                        /*Job Description is visible and is not searchable*/
                        "targets": [3],
                        "visible": true,
                        "searchable": true,
                        "orderable": true
                    },
                    {
                        /*Department is visible and is not searchable*/
                        "targets": [4],
                        "visible": true,
                        "searchable": true,
                        "orderable": true
                    },
                    {
                        /*Branch  is visible and is not searchable*/
                        "targets": [5],
                        "visible": true,
                        "searchable": true,
                        "orderable": true
                    },
                    {
                        /*Cost Centre is visible and is not searchable*/
                        "targets": [6],
                        "visible": true,
                        "searchable": true,
                        "orderable": true
                    },
                    {
                        /*Select button  is  visible and is not searchable*/
                        "targets": [7],
                        "visible": true,
                        "searchable": false,
                        "orderable": false
                    }
                ],
                "columns": [
                    { "data": "employeeID", "name": "employeeID", "autoWidth": true },
                    { "data": "employeeNo", "name": "employeeNo", "autoWidth": true },
                    { "data": "name", "name": "make", "autoWidth": true },
                    { "data": "jobDescription", "name": "jobDescription", "autoWidth": true },
                    { "data": "department", "name": "department", "autoWidth": true },
                    { "data": "branch", "name": "branch", "autoWidth": true },
                    { "data": "costCentre", "name": "costCentre", "autoWidth": true },
                    {
                        "render": function (data, type, full, meta) {
                            var selectedEmployee = {};
                            selectedEmployee.employeeID = full.employeeID;
                            selectedEmployee.name = encodeURIComponent(full.name);
                            selectedEmployee.employeeNo = encodeURIComponent(full.employeeNo);
                            return "<p data-placement='top' data-toggle='tooltip' title='Select'><button id='btnModel' class='btn btn-primary btn-xs' data-title='Select' data-toggle='modal' data-target='#edit' onclick=updateEmployeeInputFields('" + JSON.stringify(selectedEmployee) + "')><span class='glyphicon glyphicon-pencil'></span></button></p>";
                        }
                    }
                ]
            });//Employee Table
        }
        function GetSalesRepData() {
            $("#SalesRepTable").on('xhr.dt', function (e, settings, json, xhr) {
            }).DataTable({
                lengthMenu: [25, 100, 150, 200],
                dom: '<lfB<t>ip>',
                buttons: ['excel', 'copy', 'csv', 'pdf', 'print'],
                "fixedHeader": {
                    "header": true,
                    "footer": true
                },
                "responsive": true,
                "processing": true, // for show progress bar
                "serverSide": true, // for process server side
                "filter": true, // this is for disable filter (search box)
                "orderMulti": false, // for disable multiple column at once
                "ajax": {

                    "url": "/Employee/SalesReps/Listing?handler=Paging",
                     "headers":
                        {
                            "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                        },
                    "type": "POST",
                    /*"contentType": "application/x-www-form-urlencoded",*/
                    "datatype": "json"
                },
                "columnDefs":
                [{
                        /*Sales Rep ID is not visible and is not searchable*/
                        "targets": [0],
                        "visible": false,
                        "searchable": false
                    },
                    {
                        /*Sales Rep Code is visible and is searchable*/
                        "targets": [1],
                        "visible": true,
                        "searchable": true
                    },
                    {
                        /*Sales Rep Name is visible and is not searchable*/
                        "targets": [2],
                        "visible": true,
                        "searchable": true
                    },
                    {
                        /*Select button  is  visible and is not searchable*/
                        "targets": [3],
                        "visible": true,
                        "searchable": false,
                        "orderable": false
                    }
                ],
                "columns": [
                    { "data": "salesRepID", "name": "salesRepID", "autoWidth": true },
                    { "data": "salesRepCode", "name": "salesRepCode", "autoWidth": true },
                    { "data": "salesRepName", "name": "salesRepName", "autoWidth": true },
                    {
                        "render": function (data, type, full, meta) {
                            var selectedSalesRep = {};
                            selectedSalesRep.salesRepID = full.salesRepID;
                            selectedSalesRep.salesRepCode = encodeURIComponent(full.salesRepCode);
                            selectedSalesRep.salesRepName = encodeURIComponent(full.salesRepName);
                            return "<p data-placement='top' data-toggle='tooltip' title='Select'><button id='btnModel' class='btn btn-primary btn-xs' data-title='Select' data-toggle='modal' data-target='#edit' onclick=updateSalesRepInputFields('" + JSON.stringify(selectedSalesRep) + "')><span class='glyphicon glyphicon-pencil'></span></button></p>";
                        }
                    }
                ]

            });//Sales Rep Table
        }



        function ajaxSalesRepUpdate(obj) {

            console.log("ajaxSalesRepUpdate Function runs: " + JSON.stringify(obj));
            $.ajax({
                type: "PUT",
                url: "/Employee/SalesRepEmployee/SaleRepEmployee?handler=UpdateRepEmployeeLink",
                headers:
                {
                    "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                },
                contentType: "application/json",
                dataType: "json",
                data: JSON.stringify(obj),
                success: function (data) {
                    console.log(data);
                    console.log("Sales Rep Employee Data successfully returned from DataBase");
                    $("#modalHeader").text("Sales Rep Employee Processing Status");
                    $("#modalMessage").text($("#SalesRepCodeEmployeeNoLinkID").val() + " was updated.");
                    $("#myModal").modal("show");
                    },
                    error: function (jqXHR, textStatus, errorThrown) {

                        $("#modalHeader").text("Sales Rep Employee Data Processing Status");
                        $("#modalMessage").text("Sales Rep Employee Data was not updated.");
                        $("#myModal").modal("show");
                    }
                });//ajax Update Section 1
        }

        function ajaxSalesRepInsert(obj) {
            console.log("SalesRepEmployee: in Insert Ajax Call: " + JSON.stringify(obj));
            $.ajax({
                type: "POST",
                url: "/Employee/SalesRepEmployee/SaleRepEmployee?handler=InsertRepEmployeeLink",
                    headers:
                        {
                            "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                        },
                    contentType: "application/json",
                    dataType: "json",
                    data: JSON.stringify(obj),
                    success: function (data) {
                        $("#modalHeader").text("Sales Rep Employee Processing Status");
                        $("#modalMessage").text(data.SalesRepCodeEmployeeNoLinkID + " was inserted.");
                        $("#myModal").modal("show");
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        $("#modalHeader").text("Sales Rep Employee Processing Status");
                        $("#modalMessage").text("Sales Rep Employee Data Not Updated.");
                        $("#myModal").modal("show");
                    }
                });//ajax insert
        }

        $(document).ready(function () {
            $('#savebtn').click(function () {
                SaleRepEmployeeToSave.SalesRepCodeEmployeeNoLinkID = $('#SalesRepCodeEmployeeNoLinkID').val();
                SaleRepEmployeeToSave.employeeID = $('#employeeID').val();
                SaleRepEmployeeToSave.salesRepID = $('#salesRepID').val();
                
                if ($('#SalesRepCodeEmployeeNoLinkID').val().length > 0 && $('#SalesRepCodeEmployeeNoLinkID').val() > 0) {
                    ajaxSalesRepUpdate(SaleRepEmployeeToSave);
                }
                else {
                    ajaxSalesRepInsert(SaleRepEmployeeToSave);
                }
            });

            //hide the Reports To table and the Reports To capture fields when the form starts up
            $("#divEmployeeTable").hide();
            $("#divSalesRepTable").hide();
         
            //Find Employee
            $('#findEmployeeBtn').click(function () {
                $("#divEmployeeTable").show();
                if (!$.fn.DataTable.isDataTable('#EmployeeTable')) {
                    GetEmployeeData();
                }
            });
            //Find Sales Rep
            $('#findSalesRepBtn').click(function () {
                $("#divSalesRepTable").show();
                if (!$.fn.DataTable.isDataTable('#SalesRepTable')) {
                    GetSalesRepData();
                }
            });
            

   });//Document Ready end.

    </script>

}
