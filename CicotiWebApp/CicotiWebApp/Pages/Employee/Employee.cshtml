@page  "{EmployeeID?}"

@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@functions{
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Model.HttpContext).RequestToken;
    }
}
@model CicotiWebApp.Pages.Employee.EmployeeModel

@{
    ViewData["Title"] = "Employee: Create/ Edit";
    Layout = "~/Pages/_LayoutDataTables.cshtml";
}

<h2>Employee Maintenance</h2>

<h4>Employee Update</h4>
<hr />
<form id="employeeForm" class="form-horizontal" data-ajax="true" data-ajax-method="post" data-ajax-begin="">
    <input type="hidden" asp-for="Employee.EmployeeID" id="employeeID" />
    <input type="hidden" asp-for="Employee.ReportsToID" id="reportsToID" />
    <div id="divEmployeeNo" class="form-group">
        <div class="col-xs-12 col-md-2 col-lg-2 text-left">
            <label asp-for="Employee.EmployeeNo" class="control-label">Employee No</label>
        </div>
        <div class="col-xs-12 col-md-10 col-lg-10 text-left">
            <input asp-for="Employee.EmployeeNo" class="form-control" id="employeeNo" />
        </div>
        <span asp-validation-for="Employee.EmployeeNo" class="text-danger"></span>
    </div>
    <div id="divFirstName" class="form-group">
        <div class="col-xs-12 col-md-2 col-lg-2 text-left">
            <label asp-for="Employee.FirstName" class="control-label">First Name</label>
        </div>
        <div class="col-xs-12 col-md-10 col-lg-10 text-left">
            <input asp-for="Employee.FirstName" class="form-control" id="firstName" />
        </div>
        <span asp-validation-for="Employee.FirstName" class="text-danger"></span>
    </div>
    <div id="divLastName" class="form-group">
        <div class="col-xs-12 col-md-2 col-lg-2 text-left">
            <label asp-for="Employee.LastName" class="control-label">Last Name</label>
        </div>
        <div class="col-xs-12 col-md-10 col-lg-10 text-left">
            <input asp-for="Employee.LastName" class="form-control" id="lastName" />
        </div>
        <span asp-validation-for="Employee.LastName" class="text-danger"></span>
    </div>
    <div class="form-group" id="divStartDate">
        <div class="col-xs-12 col-md-2 col-lg-2 text-left">
            <label asp-for="Employee.StartDate" class="control-label">Start Date</label>
        </div>
        <div class='input-group date' id='datetimepicker1'>
            <div class="col-xs-12 col-md-10 col-lg-10 text-left">
                <input asp-for="Employee.StartDate" class="form-control" type="text" id="startDate" />
            </div>
            <span class="input-group-addon">
                <span class="glyphicon glyphicon-calendar"></span>
            </span>
            <span asp-validation-for="Employee.StartDate" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group" id="divEndDate">
        <div class="col-xs-12 col-md-2 col-lg-2 text-left">
            <label asp-for="Employee.EndDate" class="control-label">End Date</label>
        </div>
        <div class='input-group date' id='datetimepicker2'>
            <div class="col-xs-12 col-md-10 col-lg-10 text-left">
                <input asp-for="Employee.EndDate" class="form-control" type="text" id="endDate" />
            </div>
            <span class="input-group-addon">
                <span class="glyphicon glyphicon-calendar"></span>
            </span>
            <span asp-validation-for="Employee.EndDate" class="text-danger"></span>
        </div>
    </div>
    <div id="divJobDescription" class="form-group">
        <div class="col-xs-12 col-md-2 col-lg-2 text-left">
            <label asp-for="Employee.JobDescription" class="control-label">Job Description</label>
        </div>
        <div class="col-xs-12 col-md-10 col-lg-10 text-left">
            <select asp-for="Employee.JobDescriptionID" id="jobDescriptionID"
                    asp-items="Model.JobDescriptionSL" class="form-control">
                <option value="">--Select Job Description--</option>
            </select>
            <span asp-validation-for="Employee.JobDescriptionID" class="text-danger"></span>
        </div>
    </div>
    <div id="divBranch" class="form-group">
        <div class="col-xs-12 col-md-2 col-lg-2 text-left">
            <label asp-for="Employee.Branch" class="control-label">Branch</label>
        </div>
        <div class="col-xs-12 col-md-10 col-lg-10 text-left">
            <select asp-for="Employee.BranchID" id="branchID"
                    asp-items="Model.BranchSL" class="form-control">
                <option value="">--Select Branch--</option>
            </select>
        </div>
        <span asp-validation-for="Employee.BranchID" class="text-danger"></span>
    </div>
    <div id="CostCentre" class="form-group">
        <div class="col-xs-12 col-md-2 col-lg-2 text-left">
            <label asp-for="Employee" class="control-label">Cost Centre</label>
        </div>
        <div class="col-xs-12 col-md-10 col-lg-10 text-left">
            <select asp-for="Employee.CostCentreID" id="costCentreID"
                    asp-items="Model.CostCentreSL" class="form-control">
                <option value="">--Select CostCentre--</option>
            </select>
            <span asp-validation-for="Employee.CostCentreID" class="text-danger"></span>
        </div>
    </div>
    <div id="Department" class="form-group">
        <div class="col-xs-12 col-md-2 col-lg-2 text-left">
            <label asp-for="Employee" class="control-label">Department</label>
        </div>
        <div class="col-xs-12 col-md-10 col-lg-10 text-left">
            <select asp-for="Employee.DepartmentID" id="departmentID"
                    asp-items="Model.DepartmentSL" class="form-control">
                <option value="">--Select Department--</option>
            </select>
            <span asp-validation-for="Employee.DepartmentID" class="text-danger"></span>
        </div>
    </div>
    <div id="ReportsToSection">
        <div class="input-group" id="divReportsToBtns">
            <div class="col-xs-12 col-md-4 col-lg-4">
                <span class="input-group-btn">
                    <input type="button" value="Find Reports To." class="btn btn-default" id="findReportsToBtn" />
                </span>
            </div>
            <div class="col-xs-12 col-md-4 col-lg-4">
            </div>
            <div class="col-xs-12 col-md-4 col-lg-4">
                <span class="input-group-btn">
                    <input type="button" value="Show Reports To" class="btn btn-default" id="showReportsToBtn" />
                </span>
            </div>
        </div>

        <br />
        <div id="divReportsToInputFieldsSection" class="well-sm" style="background-color:lightgray">
            <div class="form-group" id="divReportsToName">
                <div class="col-xs-12 col-md-2 col-lg-2 text-left">
                    <label class="control-label">Reports To: Name</label>
                </div>
                <div class="col-xs-12 col-md-10 col-lg-10 text-left">
                    <input  asp-for="Employee.ReportsTo.LastName" id="reportsToName" class="form-control" />
                </div>
            </div>
        </div>
        <div id="divReportsToTable" style="width:90%; margin:0 auto;">
            <table id="ReportsToTable" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        <th>EmployeeID</th>
                        <th>Employee Number</th>
                        <th>Name</th>
                        <th>Job Description</th>
                        <th>Department</th>
                        <th>Branch</th>
                        <th>Cost Centre</th>
                        <th>Select</th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
    <br />
    <div class="col-xs-12 col-md-4 col-lg-4">
        <span class="input-group-btn">
            <input type="button" value="Save" class="btn btn-default" id="savebtn" />
        </span>
    </div>
    <br />
    <hr />
    <p>
        <a asp-page="SalesRepEmployee/SaleRepEmployee">New Rep</a>
        <br />
        <a asp-page="SalesRepEmployee/SaleRepEmployee">Sales Rep Listing</a>
    </p>
    <div id="divSalesRepTable" style="width:90%; margin:0 auto;">
        <table id="SalesRepTable" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0">
            <thead>
                <tr>
                    <th>SalesRepID</th>
                    <th>Sales Rep Code</th>
                    <th>Sales Rep Name</th>
                </tr>
            </thead>
        </table>
    </div>
</form>


<div>
    <a asp-page="Index">Back to List</a>
</div>

@section Scripts {
    @await Html.PartialAsync("_ModalPartial")
    @await Html.PartialAsync("_ModalConfirmPartial")
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial"); }

    
    

    <script type="text/javascript">
        var employeeToSave = {};
        function updateReportsToInputFields(data) {
            var selectedEmployee = {};
            selectedEmployee = JSON.parse(data);
            console.log(selectedEmployee.employeeID);
            $("#reportsToID").val(selectedEmployee.reportsToID);
            $("#reportsToName").val(decodeURIComponent(selectedEmployee.name));
            $("#divReportsToInputFieldsSection").show();
            $("#divReportsToTable").hide();
            $('#showReportsToBtn').val("Hide Reports To");
        }
        function GetReportsToData() {
             $("#ReportsToTable").on('xhr.dt', function (e, settings, json, xhr) {
            }).DataTable({
                lengthMenu: [25, 100, 150, 200],
                dom: '<lfB<t>ip>',
                buttons: ['excel', 'copy', 'csv', 'pdf', 'print'],
                "fixedHeader": {
                    "header": true,
                    "footer": true
                },
                "responsive": true,
                "processing": true, // for show progress bar
                "serverSide": true, // for process server side
                "filter": true, // this is for disable filter (search box)
                "orderMulti": false, // for disable multiple column at once
                "ajax": {

                    "url": "/Employee/Index?handler=Paging",
                     "headers":
                        {
                            "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                        },
                    "type": "POST",
                    /*"contentType": "application/x-www-form-urlencoded",*/
                    "datatype": "json"
                },
                "columnDefs":
                [   {
                        /*Employee ID is not visible and is not searchable*/
                        "targets": [0],
                        "visible": false,
                        "searchable": true
                    },
                    {
                        /*Reports To Employee No is visible and is searchable*/
                        "targets": [1],
                        "visible": false,
                        "searchable": true
                    },
                    {
                        /*Name is visible and is not searchable*/
                        "targets": [2],
                        "visible": true,
                        "searchable": true,
                        "orderable": true
                    },
                    {
                        /*Job Description is visible and is not searchable*/
                        "targets": [3],
                        "visible": true,
                        "searchable": true,
                        "orderable": true
                    },
                    {
                        /*Department is visible and is not searchable*/
                        "targets": [4],
                        "visible": true,
                        "searchable": true,
                        "orderable": true
                    },
                    {
                        /*Branch  is visible and is not searchable*/
                        "targets": [5],
                        "visible": true,
                        "searchable": true,
                        "orderable": true
                    },
                    {
                        /*Cost Centre is visible and is not searchable*/
                        "targets": [6],
                        "visible": true,
                        "searchable": true,
                        "orderable": true
                    },
                    {
                        /*Select button  is  visible and is not searchable*/
                        "targets": [7],
                        "visible": true,
                        "searchable": false,
                        "orderable": false
                    }
                ],
                "columns": [
                    { "data": "employeeID", "name": "employeeID", "autoWidth": true },
                    { "data": "employeeNo", "name": "employeeNo", "autoWidth": true },
                    { "data": "name", "name": "make", "autoWidth": true },
                    { "data": "jobDescription", "name": "jobDescription", "autoWidth": true },
                    { "data": "department", "name": "department", "autoWidth": true },
                    { "data": "branch", "name": "branch", "autoWidth": true },
                    { "data": "costCentre", "name": "costCentre", "autoWidth": true },
                    {
                        "render": function (data, type, full, meta) {
                            var selectedEmployee = {};
                            selectedEmployee.reportsToID = full.employeeID;
                            selectedEmployee.name = encodeURIComponent(full.name);
                            return "<p data-placement='top' data-toggle='tooltip' title='Select'><button id='btnModel' class='btn btn-primary btn-xs' data-title='Select' data-toggle='modal' data-target='#edit' onclick=updateReportsToInputFields('" + JSON.stringify(selectedEmployee) + "')><span class='glyphicon glyphicon-pencil'></span></button></p>";
                        }
                    }
                ]
            });//ReportsTo Table
        }
   

        function ajaxEmployeeInsert(obj) {
            console.log("Employee: in Insert Ajax Call: " + JSON.stringify(obj));
            $.ajax({
                type: "POST",
                url: "/Employee/Employee?handler=InsertEmployee",
                    headers:
                        {
                            "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                        },
                    contentType: "application/json",
                    dataType: "json",
                    data: JSON.stringify(obj),
                success: function (data) {
                    $("#modalHeader").text("Employee Processing Status");
                    if (data.employee != null) { 
                        if (data.employee.employeeID != 0) {
                            $("#employeeID").val(data.employee.employeeID);
                        }
                    }
                        $("#modalMessage").text(data.msg);
                        $("#myModal").modal("show");
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        $("#modalHeader").text("Employee Processing Status");
                        $("#modalMessage").text("Employee Data Not Updated.");
                        $("#myModal").modal("show");
                    }
                });//ajax Update / Insert
        }
    $(document).ready(function ()
    {
        $('#savebtn').click(function () {

                employeeToSave.employeeID = $('#employeeID').val();
                employeeToSave.employeeNo = $('#employeeNo').val();
                employeeToSave.firstName = $('#firstName').val();
                employeeToSave.lastName = $('#lastName').val();
                employeeToSave.departmentID = $('#departmentID').val();
                employeeToSave.branchID = $('#branchID').val();
                employeeToSave.costCentreID = $('#costCentreID').val();
                employeeToSave.jobDescriptionID = $('#jobDescriptionID').val();
                employeeToSave.startDate = $('#startDate').val();
                employeeToSave.endDate = $('#endDate').val();
                employeeToSave.reportsToID = $('#reportsToID').val();

           
            if ($("#employeeForm").valid()) {
                ajaxEmployeeInsert(employeeToSave);
            }
           
                return;

        });

        //hide the Reports To table and the Reports To capture fields when the form starts up
        $("#divReportsToTable").hide();
        $("#divReportsToInputFieldsSection").hide();
        $("#reportsToName").prop("disabled", true);


        //Find Model
        $('#findReportsToBtn').click(function () {
            $("#divReportsToTable").show();
            $('#divReportsToInputFieldsSection').hide();
            if (!$.fn.DataTable.isDataTable('#ReportsToTable')) {

                GetReportsToData();
            }
        });
        //Show and Hide Model Button
        $('#showReportsToBtn').click(function () {
            if ($('#showReportsToBtn').val() == "Show Reports To") {
                $("#divReportsToTable").hide();
                $('#divReportsToInputFieldsSection').show();
                $('#showReportsToBtn').val("Hide Reports To");
            }
            else {
                $("#divReportsToTable").hide();
                $('#divReportsToInputFieldsSection').hide();
                $('#showReportsToBtn').val("Show Reports To");
            }
        });

        //var employeeStartdate = new Date($.now());
        //var now = new Date();
        //var employeeEnddate = new Date(now.getFullYear() + 5, now.getMonth(), now.getDay());
        
        $('#datetimepicker1').datetimepicker(
            {
                format: "YYYY/MM/DD",
                date: '@Model.Employee.StartDate'
            });
        $('#datetimepicker2').datetimepicker(
            {
                format: "YYYY/MM/DD",
                date: '@Model.Employee.EndDate'
            });

        $("#SalesRepTable").on('xhr.dt', function (e, settings, json, xhr) {
            }).DataTable({
                //lengthMenu: [5],
                //dom: '<lfB<t>ip>',
                dom: '<lf<t>ip>',
                //buttons: ['excel', 'copy', 'csv', 'pdf', 'print'],
                "fixedHeader": {
                    "header": true,
                    "footer": true
                },
                "responsive": true,
                "processing": true, // for show progress bar
                "serverSide": true, // for process server side
                "filter": true, // this is for disable filter (search box)
                "orderMulti": false, // for disable multiple column at once
                "ajax": {

                    "url": "/Employee/Employee?handler=SalesRepPaging",
                     "headers":
                        {
                            "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                        },
                    "type": "POST",
                    "data": function (d) {
                        // d.search.value = $('#tripId').val();
                        //This is just test
                        d.employeeID = $('#employeeID').val();
                    },
                    /*"contentType": "application/x-www-form-urlencoded",*/
                    "datatype": "json"
                },
                "columnDefs":
                [{
                        /*Sales Rep ID is not visible and is not searchable*/
                        "targets": [0],
                        "visible": false,
                        "searchable": false
                    },
                    {
                        /*Sales Rep Code is visible and is searchable*/
                        "targets": [1],
                        "visible": true,
                        "searchable": true
                    },
                    {
                        /*Sales Rep Name is visible and is not searchable*/
                        "targets": [2],
                        "visible": true,
                        "searchable": true
                    },
                ],
                "columns": [
                    { "data": "salesRepID", "name": "salesRepID", "autoWidth": true },
                    { "data": "salesRepCode", "name": "salesRepCode", "autoWidth": true },
                    { "data": "salesRepName", "name": "salesRepName", "autoWidth": true }
                ]

            });//Sales Rep Table








    });//Document Ready end.
    </script>
}