@page  "{ID?}"

@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@functions{
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Model.HttpContext).RequestToken;
    }
}
@model CicotiWebApp.Pages.ABC.InsuranceType.InsuranceTypeItemModel

@{
    ViewData["Title"] = "Create";
    Layout = "~/Pages/_LayoutDataTables.cshtml";
}

<h4>Add Edit Insurance Type</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        @*<input type="hidden" asp-for="AccAmtPrinciple.ActCostEmployeeAmtPrincipleID" id="actCostEmployeeAmtPrincipleID" />*@
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-group">
            <label asp-for="ActCostInsuranceType.ActCostInsuranceTypeID" class="control-label"></label>
            <input asp-for="ActCostInsuranceType.ActCostInsuranceTypeID" class="form-control" id="actCostInsuranceTypeID" />
            <span asp-validation-for="ActCostInsuranceType.ActCostInsuranceTypeID" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="ActCostInsuranceType.Description" class="control-label"></label>
            <input asp-for="ActCostInsuranceType.Description" class="form-control" id="description" />
            <span asp-validation-for="ActCostInsuranceType.Description" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="ActCostInsuranceType.ActCostDriverID" class="control-label"></label>
            <select asp-for="ActCostInsuranceType.ActCostDriverID" id="actCostDriverID"
                    asp-items="Model.SubCostDriverSL" class="form-control">
                Invoice Status
                <option value="">--Select Cost Driver--</option>
            </select>
            <span asp-validation-for="ActCostInsuranceType.ActCostDriverID" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="ActCostInsuranceType.ActCostPeriod.Period" class="control-label"></label>
            <select asp-for="ActCostInsuranceType.ActCostPeriodID" id="actCostPeriodID"
                    asp-items="Model.SubPeriodSL" class="form-control">
                <option value="">--Select Period--</option>
            </select>
            <span asp-validation-for="ActCostInsuranceType.ActCostPeriodID" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="ActCostInsuranceType.Amount" class="control-label"></label>
            <input asp-for="ActCostInsuranceType.Amount" class="form-control" id="amount" />
            <span asp-validation-for="ActCostInsuranceType.Amount" class="text-danger"></span>
        </div>
        <div class="form-group">
            <input type="submit" value="Save" class="btn btn-default" id="savebtn" />
        </div>
    </div>
</div>
<div>
    <a asp-page="InsuranceType">Back to List</a>
</div>

@section Scripts {
    @await Html.PartialAsync("_ModalPartial")
    @await Html.PartialAsync("_ModalConfirmPartial")
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script type="text/javascript">
        var InsuranceTypeToSave = {};
        

        function ajaxInsuranceTypeUpdate(obj) {
            console.log("ajaxInsuranceTypeUpdate Function runs: " + JSON.stringify(obj));
            $.ajax({
                type: "PUT",
                url: "/ABC/InsuranceType/InsuranceTypeItem?handler=UpdateInsuranceType",
                headers:
                {
                    "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                },
                contentType: "application/json",
                dataType: "json",
                data: JSON.stringify(obj),
                success: function (data) {
                    console.log(data);
                    console.log("Insurance Type successfully returned from DataBase");
                    $("#modalHeader").text("Insurance Type Processing Status");
                    $("#modalMessage").text($("#actCostInsuranceTypeID").val() + " was updated.");
                    $("#myModal").modal("show");
                    },
                    error: function (jqXHR, textStatus, errorThrown) {

                        $("#modalHeader").text("Insurance Type Processing Status");
                        $("#modalMessage").text("Insurance Type was not updated.");
                        $("#myModal").modal("show");
                    }
                });//ajax Update Section 1
        }

        function ajaxInsuranceTypeInsert(obj) {
            console.log("Insurance Type: in Insert Ajax Call: " + JSON.stringify(obj));
            $.ajax({
                type: "POST",
                url: "/ABC/InsuranceType/InsuranceTypeItem?handler=InsertInsuranceType",
                    headers:
                        {
                            "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                        },
                    contentType: "application/json",
                    dataType: "json",
                    data: JSON.stringify(obj),
                    success: function (data) {
                        $("#modalHeader").text("Insurance Type Processing Status");
                        $("#modalMessage").text(data.actCostInsuranceTypeID + " was inserted.");
                        $("#myModal").modal("show");
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        $("#modalHeader").text("Insurance Type Processing Status Processing Status");
                        $("#modalMessage").text("Insurance Type Processing Data Not Updated.");
                        $("#myModal").modal("show");
                    }
                });//ajax insert
        }

        $(document).ready(function () {
            $('#savebtn').click(function () {
                InsuranceTypeToSave.actCostInsuranceTypeID = $('#actCostInsuranceTypeID').val();
                InsuranceTypeToSave.description = $('#description').val();
                InsuranceTypeToSave.actCostDriverID = $('#actCostDriverID').val();
                InsuranceTypeToSave.actCostPeriodID = $('#actCostPeriodID').val();
                InsuranceTypeToSave.amount = $('#amount').val();
               
                if ($('#actCostInsuranceTypeID').val().length > 0 && $('#actCostInsuranceTypeID').val() > 0) {
                    ajaxInsuranceTypeUpdate(InsuranceTypeToSave);
                }
                else {
                    InsuranceTypeToSave.actCostInsuranceTypeID = 0
                    ajaxInsuranceTypeInsert(InsuranceTypeToSave);
                }
            });

   });//Document Ready end.

    </script>

}
