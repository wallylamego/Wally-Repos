@page
@{
    Layout = "_LayoutDataTables";
}
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@functions{
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Model.HttpContext).RequestToken;
    }
}
@model CicotiWebApp.Pages.ABC.ExchangeRates.IndexModel

@{
    ViewData["Title"] = "Del. ExchnageRate: Listing";
    Layout = "~/Pages/_LayoutDataTables.cshtml";
}

<h2>ExchangeRate Listing</h2>

<p>
    <a asp-page="Create">Create New</a>
</p>
<div id="divExchangeRateTable" style="width:90%; margin:0 auto;">
    <table id="ExchangeRateTable" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0">
        <thead>
            <tr>
                <th>ExchangeRateID</th>
                <th>FirstCurrency</th>
                <th>SecondCurrency</th>
                <th>Description</th>
                <th>Period</th>
                <th>AverageRate</th>
                <th>ClosingRate</th>
                <th>Edit</th>
                <th>Delete</th>
            </tr>
        </thead>
    </table>
</div>

@await Html.PartialAsync("_ModalPartial")

@section Scripts {

    <script type="text/javascript">
        $(document).ready(function ()
        {
            $("#ExchangeRateTable").on('xhr.dt', function (e, settings, json, xhr) {
            }).DataTable({
                lengthMenu: [25, 100, 150, 200],
                dom: '<lfB<t>ip>',
                buttons: ['excel', 'copy', 'csv', 'pdf', 'print'],
                "fixedHeader": {
                    "header": true,
                    "footer": true
                },
                "responsive": true,
                "processing": true, // for show progress bar
                "serverSide": true, // for process server side
                "filter": true, // this is for disable filter (search box)
                "orderMulti": false, // for disable multiple column at once
                "ajax": {

                    "url": "/ABC/ExchangeRates/Index?handler=Paging",
                     "headers":
                        {
                            "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                        },
                    "type": "POST",
                    /*"contentType": "application/x-www-form-urlencoded",*/
                    "datatype": "json"
                },
                "columnDefs":
                [   {
                        /*ExchangeRate ID is not visible and is not searchable*/
                        "targets": [0],
                        "visible": false,
                        "searchable": false
                    },
                    {
                        /*ExchangeRate Name is visible and is not searchable*/
                        "targets": [1],
                        "visible": true,
                        "searchable": true
                    },
                    {
                        /*Hrs in ExchangeRate is visible and is not searchable*/
                        "targets": [2],
                        "visible": true,
                        "searchable": true
                    },
                    {
                        /*Sort Order No is visible and is not searchable*/
                        "targets": [3],
                        "visible": true,
                        "searchable": true
                    },
                    {
                        /* edit button  is  visible and is not searchable*/
                        "targets": [7],
                        "visible": true,
                        "searchable": false,
                        "orderable": false
                    },
                    {
                        /*Delete button  is  visible and is not searchable*/
                        "targets": [8],
                        "visible": true,
                        "searchable": false,
                        "orderable": false
                    }
                ],
                "columns": [
                    { "data": "ExchangeRateID", "name": "ExchangeRateID", "autoWidth": true },
                    { "data": "firstCurrency", "name": "firstCurrency", "autoWidth": true },
                    { "data": "secondCurrency", "name": "secondCurrency", "autoWidth": true },
                    { "data": "Description", "name": "description", "autoWidth": true },
                    { "data": "Period", "name": "period", "autoWidth": true },
                    { "data": "AverageRate", "name": "averageRate", "autoWidth": true },
                    { "data": "ClosingRate", "name": "closingRate", "autoWidth": true },
                    {
                        "render": function (data, type, full, meta) {
                            return "<p data-placement='top' data-toggle='tooltip' title='Edit'><button class='btn btn-primary btn-xs' data-title='Edit' data-toggle='modal' data-target='#edit' onclick='window.location.href=\"/ABC/ExchangeRates/Edit/" + full.ExchangeRateID +  "\"\'><span class='glyphicon glyphicon-pencil'></span></button></p>";
                        }
                    },
                    {
                        "data": null, render: function (data, type, row)
                        {
                            return '<p data-placement="top" data-toggle="tooltip" title="Delete"><button class="btn btn-danger btn-xs" data-title="Delete" data-toggle="modal" data-target="#delete" onclick=DeleteData("' + row.ExchangeRateID + '")><span class="glyphicon glyphicon-trash"></span></button></p>';
                       }
                    }
                ]

            });//ExchangeRate Table
        });//Document Ready end.


    function DeleteData(ExchangeRateID)
     {
            if (confirm("Are you sure you want to delete this ExchangeRate ...?"))
            {
                console.log("ExchangeRate ID to be deleted is: " + ExchangeRateID)
                Delete(ExchangeRateID);
            }
            else
            {
                return false;
            }
     }

        function Delete(ExchangeRateID)
        {
            console.log("Before Ajax Call:" + "ExchangeRate ID is: " + ExchangeRateID)
            var obj = {};
            obj.ExchangeRateID = ExchangeRateID;


            $.ajax({
                type: "DELETE",
                url: '/ABC/ExchangeRates/Index?handler=Delete',
                headers:
                    {
                        "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                    },
                contentType: "application/json",
                dataType: "json",
                data: JSON.stringify(obj),
                success: function (msg) {
                        oTable = $('#ExchangeRateTable').DataTable();
                        oTable.draw();
                        $("#msg").html(msg);
                        $("#modalHeader").text("ExchangeRate Processing Status");
                        $("#modalMessage").text(msg);
                        $("#myModal").modal("show");
                    },
                    error: function () {
                        $("#msg").html("Error while making Ajax call!");
                        $("#modalHeader").text("ExchangeRate Processing Status");
                        $("#modalMessage").text(msg);
                        $("#myModal").modal("show");
                    }
                });//ajax

        }

    </script>
}
