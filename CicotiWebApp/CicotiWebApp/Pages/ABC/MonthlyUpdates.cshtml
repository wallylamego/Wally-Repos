@page
@{
    Layout = "_LayoutDataTables";
}
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@functions{
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Model.HttpContext).RequestToken;
    }
}
@model WebAppFAM.Pages.ABC.IndexModel

@{
    ViewData["Title"] = "ABC";
}

<h2>ABC Maintenance</h2>

<p>
    <a asp-page="Create">Run Procedures</a>
</p>
<div id="loader"></div>
<div asp-validation-summary="ModelOnly" class="text-danger"></div>

<div id="accordion">
    <div class="card" id="cardSection1">
        <div class="card-header" id="headingOne">
            <h5 class="mb-0">
                <button class="btn-primary" data-toggle="collapse" data-target="#collapseOne" aria-expanded="true"
                        aria-controls="collapseOne">
                    Section 1: Monthly Base Tables
                </button>
            </h5>
        </div>
        <div id="collapseOne" class="collapse" aria-labelledby="headingOne" data-parent="#accordion">
            <div class="row" id="divDuplicateHeaderForm">
                <div id="divCopyOnePeriodToAnother">
                    <h4>Duplicate Allocations From One Period to Another</h4>
                    <div class="row">
                        <div class="form-group" id="divCopyFromPeriod">
                            <label asp-for="ActCostPeriod.Period" for="periodCopyFrom" class="control-label col-xs-2">Copy Period</label>
                            <div class="col-xs-10">
                                <input asp-for="ActCostPeriod.Period" class="form-control" id="periodCopyFrom" />
                            </div>
                            <span asp-validation-for="ActCostPeriod.Period" class="text-danger"></span>
                        </div>
                        <br />
                    </div>
                    <div class="row">
                        <div class="form-group" id="divCopyToPeriod">
                            <label asp-for="ActCostPeriod.Period" for="periodCopyTo" class="control-label col-xs-2">Paste Period</label>
                            <div class="col-xs-10">
                                <input asp-for="ActCostPeriod.Period" class="form-control" id="periodCopyTo" />
                            </div>
                            <span asp-validation-for="ActCostPeriod.Period" class="text-danger"></span>
                        </div>
                    </div>
                    <br />
                </div>
                
                <div id="divAccAllocationToPeriod" class="wrapper">
                        <h5>Update the Account Allocation Per Principle (P4P acc and goodwill)</h5>
                            <div class="form-group">
                                <input type="submit" value="Run" class="btn btn-default" id="runAccPrinciple" />
                            </div>
                        <p id="runAccAllocationToPeriodMsg"></p>
                </div>
                <br />
                <div id="divCashCollectionCostPerDepot" class="wrapper">
                    <h5>Update the Cash Collection Cost Per Depot: Used to allocate Bank Charges</h5>
                    <div class="form-group">
                        <input type="submit" value="Run" class="btn btn-default" id="runCashCollection" />
                    </div>
                    <p id="runCashCollectionCostPerDepotMsg"></p>
                </div>
                <br />
                <div id="divInsuranceCost" class="wrapper">
                    <h5>Update the Insurance Type Cost Per Period</h5>
                    <div class="form-group">
                        <input type="submit" value="Run" class="btn btn-default" id="runInsuranceCosts" />
                    </div>
                    <p id="runInsuranceCostMsg"></p>
                </div>
                <br />
                <div id="divSpecificEmployeeAllocationPerSilo" class="wrapper">
                    <h5>Update the Employee Allocation Per Silo</h5>
                    <div class="form-group">
                        <input type="submit" value="Run" class="btn btn-default" id="runAllocateSilo" />
                    </div>
                    <p id="runSpecificEmployeeAllocationPerSiloMsg"></p>
                </div>
                <br />
                <div id="divInterCompany" class="wrapper">
                    <h5>Update InterCompany Cost</h5>
                    <div class="form-group">
                        <input type="submit" value="Run" class="btn btn-default" id="runInterCompany" />
                    </div>
                    <p id="runInterCompanyMsg"></p>
                </div>
            </div> 
            </div>
        </div>
    </div>
    <div class="card" id="cardSection2">
        <div class="card-header" id="headingTwo">
            <h5 class="mb-0">
                <button class="btn-primary" data-toggle="collapse" data-target="#collapseTwo" aria-expanded="true" id="btnInvoiceSelection"
                        aria-controls="collapseTwo">
                    Section 2: CheckLists of Imports
                </button>
                <br />
            </h5>
            
        </div>
        <div id="collapseTwo" class="collapse" aria-labelledby="headingTwo" data-parent="#accordion">
            <div class="row" id="divImportsCheckList">
                @*<div class="col-xs-offset-0"></div>*@
                <div class="col-xs-12">
                    -Item 1: Payroll File for Period: Table: ActCostPayrollCost;
                    <br />
                    -Item 2: Debtors File for the Month: Table: ActCostDebtors;
                    <br />
                    -Item 3: Stock File for the Month: Table: ActCostStockOnHand;
                    -Item 3.1. Check if all the SKUs are in the SKU Table before the stock is imported
                    <br />
                    -Item 4: Creditors File for the Month: Table: ActCostPrincipleBalance;
                    <br />
                    -Item 5: Account Balance Movement: Table: ActCostAccountBalance
                    <br />
                    -Item 6: Kilometres Travelled: Table: VehicleKms
                    <br />
                    -Item 7: Exchange Rates for Period
                    <br />
                    -Item 8: Import All Sales For the Period
                    <br />
                    -Item 8.1: Run Stored Procedure on CICOTDW: CreateSalesPerAccountPerPeriod
                    <br />
                    -Item 8.2: Run Stored Procedure on CICOTDW: CreateSalesPerDay
                </div>
            </div>
    </div>
    <div class="card" id="cardSection3">
        <div class="card-header" id="headingThree">
            <h5 class="mb-0">
                <button class="btn-primary" data-toggle="collapse" data-target="#collapseThree" aria-expanded="true" id="btnInvoiceSelected"
                        aria-controls="collapseThree">
                    Section 3: Run Scripts for the Period
                </button>
            </h5>
        </div>
        <div id="collapseThree" class="collapse" aria-labelledby="headingThree" data-parent="#accordion">
            <div class="row" id="divScriptsToRun">
                <div class="form-group" id="divCopyFromPeriod">
                    <label for="periodToUpdate" class="control-label col-xs-2">Period to Update</label>
                    <div class="col-xs-10">
                        <input asp-for="ActCostPeriod.Period" class="form-control col-xs-10" id="periodToUpdate" />
                    </div>
                    <span asp-validation-for="ActCostPeriod.Period" class="text-danger"></span>
                </div>
                <div id="divScripts">
                    <br />
                    <div id="divTransCount" class="wrapper">
                        <h5>1 - Update Tranaction Count: sp Step1_ActCostTransactionCount</h5>
                        <div class="form-group">
                            <input type="submit" value="Run" class="btn btn-default" id="runTransCount" />
                        </div>
                        <p id="runTransCountMsg"></p>
                    </div>
                    <br />
                    <div id="divSalesUpdate" class="wrapper">
                        <h5>2 - Update Sales and Cost of Sales: sp Step1_SalesUpdatePerPeriod</h5>
                        <div class="form-group">
                            <input type="submit" value="Run" class="btn btn-default" id="runSalesUpdate" />
                        </div>
                        <p id="runSalesUpdateMsg"></p>
                    </div>
                    <br />
                    <div id="divEmloyeeUpdate" class="wrapper">
                        <h5>3 - Archive Employees Table: sp Step2_EmployeeArchive</h5>
                        <div class="form-group">
                            <input type="submit" value="Run" class="btn btn-default" id="runEmployeeArchive" />
                        </div>
                        <p id="runEmployeeArchiveMsg"></p>
                    </div>
                    <br />
                    <div id="divVehicleUpdate" class="wrapper">
                        <h5>4- Archive Vehicle Table: sp Step2_VehicleArchive</h5>
                        <div class="form-group">
                            <input type="submit" value="Run" class="btn btn-default" id="runVehicleArchive" />
                        </div>
                        <p id="runVehicleArchiveMsg"></p>
                    </div>
                    <br />
                    <div id="divPalletsUpdate" class="wrapper">
                        <h5>5- Pallet Update: Step2_PalletsOnHand</h5>
                        <div class="form-group">
                            <input type="submit" value="Run" class="btn btn-default" id="runPalletUpdate" />
                        </div>
                        <p id="runPalletUpdateMsg"></p>
                    </div>
                    <br />
                    <div id="divAccBalanceUpdate" class="wrapper">
                        <h5>6- Update Movement on GL Accounts: sp Step3_AccBalanceMovementUpdate</h5>
                        <div class="form-group">
                            <input type="submit" value="Run" class="btn btn-default" id="runBalanceMovement" />
                        </div>
                        <p id="runBalanceMovementMsg"></p>
                    </div>
                    <br />
                    <div id="divStaffAllocation" class="wrapper">
                        <h5>7- Staff Allocation Per Principle: sp Step4_ActCostTableStaffAllocation</h5>
                        <div class="form-group">
                            <input type="submit" value="Run" class="btn btn-default" id="runStaffPerPrinciple" />
                        </div>
                        <p id="runStaffPerPrincipleMsg"></p>
                    </div>
                    <br />
                    <div id="divVehicleAllocation" class="wrapper">
                        <h5>8- Vehicle Allocation Per Principle: sp Step4_ActCostTableVehicleAllocation</h5>
                        <div class="form-group">
                            <input type="submit" value="Run" class="btn btn-default" id="runVehicleAllocation" />
                        </div>
                        <p id="runVehicleAllocationMsg"></p>
                    </div>
                    <br />
                    <div id="divMacCostAllocation" class="wrapper">
                        <h5>9- Create ABC Table Per Principle: Step5_AllocateManAccCostsToActivities</h5>
                        <div class="form-group">
                            <input type="submit" value="Run" class="btn btn-default" id="runAllocatedCosts" />
                        </div>
                        <p id="runAllocatedCostMsg"></p>
                    </div>
                    <br />
                    <div id="divDebtorsAllocation" class="wrapper">
                        <h5>10- Create Debtors Per Principle: Step6_CreateDebtorsSplitByPrincipal</h5>
                        <div class="form-group">
                            <input type="submit" value="Run" class="btn btn-default" id="runDebtorsAllocation" />
                        </div>
                        <p id="runDebtorsAllocationMsg"></p>
                    </div>
                    <br />
                    <div id="divInvestmentTable" class="wrapper">
                        <h5>11- Create Investment Table Per Principle: Step7_CreateInvestmentTable</h5>
                        <div class="form-group">
                            <input type="submit" value="Run" class="btn btn-default" id="runInvestmentTable" />
                        </div>
                        <p id="runInvestmentTableMsg"></p>
                    </div>
                    <br />
                </div>
        </div>

    </div>
    <div class="card" id="cardSection4">
        <div class="card-header" id="headingFour">
            <h5 class="mb-0">
                <button class="btn-primary" data-toggle="collapse" data-target="#collapseFour" aria-expanded="true" id="btnPrintLoadDetails"
                        aria-controls="collapseFour">
                    Section 4: Control Check List 
                </button>
            </h5>

        </div>
        <div id="collapseFour" class="collapse" aria-labelledby="headingFour" data-parent="#accordion">
            <div style="width:90%; margin:0 auto;">
                <div class="form-group" id="divCopyFromPeriod">
                    <label asp-for="ActCostPeriod.Period" class="control-label">Period to Update</label>
                    <input asp-for="ActCostPeriod.Period" class="form-control" id="periodToCheck" />
                    <span asp-validation-for="ActCostPeriod.Period" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <button type="button" class="btn btn-default" id="createProcessTable">Process</button>
                </div>
            </div>
        </div>
    </div>

</div>
</div>

@await Html.PartialAsync("_ModalPartial")
@await Html.PartialAsync("_ModalConfirmPartial")

@section Scripts {

    <script type="text/javascript">
        $(document).ready(function ()
        {
            $("#loader").hide();
            $("#runTransCount").click(function () {
                $("#loader").show();
                $(window).scrollTop(0);
                runTransactionCount();
                //$.when(runTransactionCount()).done(function (a1) {
                //    $("#loader").hide();
                //});
            });
            $("#runSalesUpdate").click(function () {
                SalesUpdate();
            });
            $("#runEmployeeArchive").click(function () {
                EmployeeUpdate();
            });
            $("#runVehicleArchive").click(function () {
                VehicleUpdate();
            });
            $("#runPalletUpdate").click(function () {
                Pallets();
            });
            $("#runBalanceMovement").click(function () {
                AccBalanceUpdate();
            });
            $("#runStaffPerPrinciple").click(function () {
                StaffPerPrincipleUpdate();
            });
            $("#runVehicleAllocation").click(function () {
                VehicleAllocationUpdate();
            });
            $("#runAllocatedCosts").click(function () {
                allocateCosts();
            });
            $("#runDebtorsAllocation").click(function () {
                $("#loader").show();
                $(window).scrollTop(0);
                DebtorsAllocationUpdate();
            });
            $("#runInvestmentTable").click(function () {
                InvestmentUpdate();
            });
            $("#runAccPrinciple").click(function () {
                DuplicateAccountPerPrinciple();
            });
            $("#runCashCollection").click(function () {
                DuplicateCashCollectionCost();
            });
            $("#runInsuranceCosts").click(function () {
                DuplicateInsuranceCost();
            });
            $("#runAllocateSilo").click(function () {
                DuplicateStaffSiloCost();
            });
            $("#runInterCompany").click(function () {
                DuplicateInterCompanyCost();
            });
            
            
            

        });//Document Ready end.

        function allocateCosts()
        {
            console.log("Allocate Costs function");
            var obj = {};
            obj.Period = $("#periodToUpdate").val();
            console.log(JSON.stringify(obj));
            console.log(obj.Period);

            $.ajax({
                type: "POST",
                url: '/ABC/MonthlyUpdates?handler=AllocateCosts',
                headers:
                    {
                        "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                    },
                contentType: "application/json",
                dataType: "json",
               // data: $("#period").val(),
                data: JSON.stringify(obj),
                success: function (msg) {
                        $("#modalHeader").text("Allocate Costs Processing Status");
                        $("#modalMessage").text(msg);
                    $("#myModal").modal("show");
                    $("#runAllocatedCostMsg").html(msg);
                    },
                    error: function () {
                        $("#modalHeader").text("Allocate Costs Processing Status");
                        $("#modalMessage").text(msg);
                        $("#myModal").modal("show");
                    }
                });//ajax
        }
        function runTransactionCount()
        {
            console.log("Transaction Count function");
            var obj = {};
            obj.Period = $("#periodToUpdate").val();
            console.log(JSON.stringify(obj));
            console.log(obj.Period);

            $.ajax({
                type: "POST",
                url: '/ABC/MonthlyUpdates?handler=TransCount',
                headers:
                    {
                        "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                    },
                contentType: "application/json",
                dataType: "json",
               // data: $("#period").val(),
                data: JSON.stringify(obj),
                success: function (msg) {
                        $("#modalHeader").text("Transaction Count Status");
                    $("#modalMessage").text(msg);
                    $("#loader").hide();
                    $("#myModal").modal("show");
                    $("#runTransCountMsg").html(msg);
                    },
                    error: function () {
                        $("#modalHeader").text("Transaction Count Status");
                        $("#modalMessage").text(msg);
                        $("#myModal").modal("show");
                    }
                });//ajax
        }
        function SalesUpdate()
        {
            console.log("Sales Update function");
            var obj = {};
            obj.Period = $("#periodToUpdate").val();
            console.log(JSON.stringify(obj));
            console.log(obj.Period);

            $.ajax({
                type: "POST",
                url: '/ABC/MonthlyUpdates?handler=SalesUpdate',
                headers:
                    {
                        "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                    },
                contentType: "application/json",
                dataType: "json",
               // data: $("#period").val(),
                data: JSON.stringify(obj),
                success: function (msg) {
                        $("#modalHeader").text("Sales Update Status");
                    $("#modalMessage").text(msg);
                    $("#loader").hide();
                    $("#myModal").modal("show");
                    $("#runSalesUpdateMsg").html(msg);
                    },
                    error: function () {
                        $("#modalHeader").text("Sales Update Status");
                        $("#modalMessage").text(msg);
                        $("#myModal").modal("show");
                    }
                });//ajax
        }
         function EmployeeUpdate()
        {
            console.log("Employee Update function");
            var obj = {};
            obj.Period = $("#periodToUpdate").val();
            console.log(JSON.stringify(obj));
            console.log(obj.Period);

            $.ajax({
                type: "POST",
                url: '/ABC/MonthlyUpdates?handler=EmloyeeUpdate',
                headers:
                    {
                        "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                    },
                contentType: "application/json",
                dataType: "json",
                data: JSON.stringify(obj),
                success: function (msg) {
                        $("#modalHeader").text("Employee Update Status");
                    $("#modalMessage").text(msg);
                    $("#loader").hide();
                    $("#myModal").modal("show");
                    $("#runEmployeeArchiveMsg").html(msg);
                    },
                    error: function () {
                        $("#modalHeader").text("Employee Update Status");
                        $("#modalMessage").text(msg);
                        $("#myModal").modal("show");
                    }
                });//ajax
        }
        function VehicleUpdate()
        {
            console.log("Vehicle Update function");
            var obj = {};
            obj.Period = $("#periodToUpdate").val();
            console.log(JSON.stringify(obj));
            console.log(obj.Period);

            $.ajax({
                type: "POST",
                url: '/ABC/MonthlyUpdates?handler=VehicleUpdate',
                headers:
                    {
                        "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                    },
                contentType: "application/json",
                dataType: "json",
                data: JSON.stringify(obj),
                success: function (msg) {
                        $("#modalHeader").text("Vehicle Update Status");
                    $("#modalMessage").text(msg);
                    $("#loader").hide();
                    $("#myModal").modal("show");
                    $("#runVehicleArchiveMsg").html(msg);
                    },
                    error: function () {
                        $("#modalHeader").text("Vehicle Update Status");
                        $("#modalMessage").text(msg);
                        $("#myModal").modal("show");
                    }
                });//ajax
        }
        function Pallets()
        {
            console.log("Pallets Update function");
            var obj = {};
            obj.Period = $("#periodToUpdate").val();
            console.log(JSON.stringify(obj));
            console.log(obj.Period);

            $.ajax({
                type: "POST",
                url: '/ABC/MonthlyUpdates?handler=Pallets',
                headers:
                    {
                        "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                    },
                contentType: "application/json",
                dataType: "json",
                data: JSON.stringify(obj),
                success: function (msg) {
                    $("#modalHeader").text("Pallets Update Status");
                    $("#modalMessage").text(msg);
                    $("#loader").hide();
                    $("#myModal").modal("show");
                    $("#runPalletUpdateMsg").html(msg);
                    },
                    error: function () {
                        $("#modalHeader").text("Pallets Update Status");
                        $("#modalMessage").text(msg);
                        $("#myModal").modal("show");
                    }
                });//ajax
        }
        function AccBalanceUpdate()
        {
            console.log("AccBalance Update function");
            var obj = {};
            obj.Period = $("#periodToUpdate").val();
            console.log(JSON.stringify(obj));
            console.log(obj.Period);

            $.ajax({
                type: "POST",
                url: '/ABC/MonthlyUpdates?handler=AccBalanceUpdate',
                headers:
                    {
                        "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                    },
                contentType: "application/json",
                dataType: "json",
                data: JSON.stringify(obj),
                success: function (msg) {
                    $("#modalHeader").text("AccBalance Update Status");
                    $("#modalMessage").text(msg);
                    $("#loader").hide();
                    $("#myModal").modal("show");
                    $("#runBalanceMovementMsg").html(msg);
                    },
                    error: function () {
                        $("#modalHeader").text("AccBalance  Update Status");
                        $("#modalMessage").text(msg);
                        $("#myModal").modal("show");
                    }
                });//ajax
        }

        function StaffPerPrincipleUpdate()
        {
            console.log("Staff Allocation Update function");
            var obj = {};
            obj.Period = $("#periodToUpdate").val();
            console.log(JSON.stringify(obj));
            console.log(obj.Period);

            $.ajax({
                type: "POST",
                url: '/ABC/MonthlyUpdates?handler=StaffPerPrinciple',
                headers:
                    {
                        "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                    },
                contentType: "application/json",
                dataType: "json",
                data: JSON.stringify(obj),
                success: function (msg) {
                    $("#modalHeader").text("Staff Per Principle Update Status");
                    $("#modalMessage").text(msg);
                    $("#loader").hide();
                    $("#myModal").modal("show");
                    $("#runStaffPerPrincipleMsg").html(msg);
                    },
                    error: function () {
                        $("#modalHeader").text("Staff Per Principle Update Status");
                        $("#modalMessage").text(msg);
                        $("#myModal").modal("show");
                    }
                });//ajax
        }
        function VehicleAllocationUpdate()
        {
            console.log("Vehicle Allocation Update function");
            var obj = {};
            obj.Period = $("#periodToUpdate").val();
            console.log(JSON.stringify(obj));
            console.log(obj.Period);

            $.ajax({
                type: "POST",
                url: '/ABC/MonthlyUpdates?handler=VehicleAllocation',
                headers:
                    {
                        "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                    },
                contentType: "application/json",
                dataType: "json",
                data: JSON.stringify(obj),
                success: function (msg) {
                    $("#modalHeader").text("Vehicle Allocation Status");
                    $("#modalMessage").text(msg);
                    $("#loader").hide();
                    $("#myModal").modal("show");
                    $("#runVehicleAllocationMsg").html(msg);
                    },
                    error: function () {
                        $("#modalHeader").text("Vehicle Allocation Status");
                        $("#modalMessage").text(msg);
                        $("#myModal").modal("show");
                    }
                });//ajax
        }
        function DebtorsAllocationUpdate()
        {
            console.log("Debtors Allocation Update function");
            var obj = {};
            obj.Period = $("#periodToUpdate").val();
            console.log(JSON.stringify(obj));
            console.log(obj.Period);

            $.ajax({
                type: "POST",
                url: '/ABC/MonthlyUpdates?handler=AllocateDebtors',
                headers:
                    {
                        "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                    },
                contentType: "application/json",
                dataType: "json",
                data: JSON.stringify(obj),
                success: function (msg) {
                    $("#modalHeader").text("Debtors Allocation Per Principle Update Status");
                    $("#modalMessage").text(msg);
                    $("#loader").hide();
                    $("#myModal").modal("show");
                    $("#runDebtorsAllocationMsg").html(msg);
                    },
                    error: function () {
                        $("#modalHeader").text("Debtors Allocation Per Principle Update Status");
                        $("#modalMessage").text(msg);
                        $("#myModal").modal("show");
                    }
                });//ajax
        }
        function InvestmentUpdate()
        {
            console.log("Investment Update function");
            var obj = {};
            obj.Period = $("#periodToUpdate").val();
            console.log(JSON.stringify(obj));
            console.log(obj.Period);

            $.ajax({
                type: "POST",
                url: '/ABC/MonthlyUpdates?handler=Investment',
                headers:
                    {
                        "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                    },
                contentType: "application/json",
                dataType: "json",
                data: JSON.stringify(obj),
                success: function (msg) {
                    $("#modalHeader").text("Investment Update Status");
                    $("#modalMessage").text(msg);
                    $("#loader").hide();
                    $("#myModal").modal("show");
                    $("#runInvestmentTableMsg").html(msg);
                    },
                    error: function () {
                        $("#modalHeader").text("Investment Update Status");
                        $("#modalMessage").text(msg);
                        $("#myModal").modal("show");
                    }
                });//ajax
        }
     function DuplicateAccountPerPrinciple()
        {
         console.log("Acount Per Principle Update function");
         var obj = {};
         var periodFrom = {};
         var periodTo = {};
         periodFrom.Period = $("#periodCopyFrom").val();
         periodTo.Period = $("#periodCopyTo").val();
         obj.CopyFromPeriod = periodFrom;
         obj.CopyToPeriod = periodTo;
         console.log(JSON.stringify(obj));

            $.ajax({
                type: "POST",
                url: '/ABC/MonthlyUpdates?handler=AccountAllocationPerPrinciple',
                headers:
                    {
                        "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                    },
                contentType: "application/json",
                dataType: "json",
                data: JSON.stringify(obj),
                success: function (msg) {
                    $("#modalHeader").text("Allocation Per Account Per Principal Update Status");
                        $("#modalMessage").text(msg);
                    $("#myModal").modal("show");
                    $("#runAccAllocationToPeriodMsg").html(msg);
                    },
                    error: function (msg) {
                        $("#modalHeader").text("Allocation Per Account Per Principal Update Status");
                        $("#modalMessage").text("There is an error");
                        $("#myModal").modal("show");
                    }
                });//ajax
        }
        function DuplicateCashCollectionCost()
        {
         console.log("Cash Collection Cost Update function");
         var obj = {};
         var periodFrom = {};
         var periodTo = {};
         periodFrom.Period = $("#periodCopyFrom").val();
         periodTo.Period = $("#periodCopyTo").val();
         obj.CopyFromPeriod = periodFrom;
         obj.CopyToPeriod = periodTo;
         console.log(JSON.stringify(obj));

            $.ajax({
                type: "POST",
                url: '/ABC/MonthlyUpdates?handler=CashCollectionCost',
                headers:
                    {
                        "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                    },
                contentType: "application/json",
                dataType: "json",
                data: JSON.stringify(obj),
                success: function (msg) {
                    $("#modalHeader").text("Cash Collection Cost Update Status");
                        $("#modalMessage").text(msg);
                    $("#myModal").modal("show");
                    $("#runCashCollectionCostPerDepotMsg").html(msg);
                    },
                    error: function (msg) {
                        $("#modalHeader").text("Cash Collection Cost Update Status");
                        $("#modalMessage").text("There is an error");
                        $("#myModal").modal("show");
                    }
                });//ajax
        }
         function DuplicateInsuranceCost()
        {
         console.log("Insurance Cost Update function");
         var obj = {};
         var periodFrom = {};
         var periodTo = {};
         periodFrom.Period = $("#periodCopyFrom").val();
         periodTo.Period = $("#periodCopyTo").val();
         obj.CopyFromPeriod = periodFrom;
         obj.CopyToPeriod = periodTo;
         console.log(JSON.stringify(obj));

            $.ajax({
                type: "POST",
                url: '/ABC/MonthlyUpdates?handler=InsuranceCost',
                headers:
                    {
                        "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                    },
                contentType: "application/json",
                dataType: "json",
                data: JSON.stringify(obj),
                success: function (msg) {
                    $("#modalHeader").text("Insurance Cost Update Status");
                        $("#modalMessage").text(msg);
                    $("#myModal").modal("show");
                    $("#runInsuranceCostMsg").html(msg);
                    },
                    error: function (msg) {
                        $("#modalHeader").text("Insurance Cost Update Status");
                        $("#modalMessage").text("There is an error");
                        $("#myModal").modal("show");
                    }
                });//ajax
        }
        function DuplicateStaffSiloCost()
        {
         console.log("Staff Silo Cost Update function");
         var obj = {};
         var periodFrom = {};
         var periodTo = {};
         periodFrom.Period = $("#periodCopyFrom").val();
         periodTo.Period = $("#periodCopyTo").val();
         obj.CopyFromPeriod = periodFrom;
         obj.CopyToPeriod = periodTo;
         console.log(JSON.stringify(obj));

            $.ajax({
                type: "POST",
                url: '/ABC/MonthlyUpdates?handler=StaffSiloCost',
                headers:
                    {
                        "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                    },
                contentType: "application/json",
                dataType: "json",
                data: JSON.stringify(obj),
                success: function (msg) {
                    $("#modalHeader").text("Staff Silo Cost Update Status");
                        $("#modalMessage").text(msg);
                    $("#myModal").modal("show");
                    $("#runSpecificEmployeeAllocationPerSiloMsg").html(msg);
                    },
                    error: function (msg) {
                        $("#modalHeader").text("Staff Silo Cost Update Status");
                        $("#modalMessage").text("There is an error");
                        $("#myModal").modal("show");
                    }
                });//ajax
        }
    function DuplicateInterCompanyCost()
        {
         console.log("InterCompany Cost Update function");
         var obj = {};
         var periodFrom = {};
         var periodTo = {};
         periodFrom.Period = $("#periodCopyFrom").val();
         periodTo.Period = $("#periodCopyTo").val();
         obj.CopyFromPeriod = periodFrom;
         obj.CopyToPeriod = periodTo;
         console.log(JSON.stringify(obj));

            $.ajax({
                type: "POST",
                url: '/ABC/MonthlyUpdates?handler=InterCompanyCost',
                headers:
                    {
                        "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                    },
                contentType: "application/json",
                dataType: "json",
                data: JSON.stringify(obj),
                success: function (msg) {
                    $("#modalHeader").text("InterCompany Cost Update Status");
                        $("#modalMessage").text(msg);
                    $("#myModal").modal("show");
                    $("#runInterCompanyMsg").html(msg);
                    },
                    error: function (msg) {
                        $("#modalHeader").text("InterCompany Cost Update Status");
                        $("#modalMessage").text("There is an error");
                        $("#myModal").modal("show");
                    }
                });//ajax
        }
    </script>
}