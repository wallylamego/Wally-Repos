@page
@{
    Layout = "_LayoutDataTables";
}
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@functions{
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Model.HttpContext).RequestToken;
    }
}
@model CicotiWebApp.Pages.Invoice.IndexModel

@{
    ViewData["Title"] = "Delivery: Listing";
    Layout = "~/Pages/_LayoutDataTables.cshtml";
}

<h2>Invoice Delivery Listing</h2>
<div id="loader"></div>
<label class="radio-inline"><input type="radio" name="deliveryStatus" value="allStatus">All</label>
<label class="radio-inline"><input type="radio" name="deliveryStatus" value="notDelivered" checked>Not Delivered</label>
<br />
<br />
<div id="divInvoiceTable" style="width:90%; margin:0 auto;">
    <table id="InvoiceTable" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0">
        <thead>
            <tr>
                <th>InvoiceID</th>
                <th>Invoice Number</th>
                <th>Invoice Printed Date</th>
                <th>Invoice Status</th>
                <th>Update</th>
                <th>Select</th>
            </tr>
        </thead>
    </table>
</div>
<div id="divInvoiceProcess">
    <div class="form-group">
        <label asp-for="Status" class="control-label"></label>
        <select asp-for="Status.StatusID" id="statusID"
                asp-items="Model.StatusSL" class="form-control">
            Invoice Status
            <option value="">--Select Status--</option>
        </select>
        <span asp-validation-for="Status.StatusID" class="text-danger"></span>
    </div>
    <div class="form-group" id="divExecuteDate">
        <label asp-for="ExecuteDate" class="control-label">Date Status Changed</label>
        <div class='input-group date' id='datetimepicker1'>
            <input type="text" class="form-control" id="executeDate" />
            <span class="input-group-addon">
                <span class="glyphicon glyphicon-calendar"></span>
                </span>

            <span asp-validation-for="ExecuteDate" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group">
        <input type="submit" value="Update" class="btn btn-default" id="update" />
    </div>
</div>
@await Html.PartialAsync("_ModalPartial")

@section Scripts {

    <script type="text/javascript">
        var deliveryStatus;
        deliveryStatus = "notDeliveredStatus";
        $(document).ready(function ()
        {
            $("#loader").hide();
            $("input[type='radio']").click(function () {
                var radioValue = $("input[name='deliveryStatus']:checked").val();
                if (radioValue) {
                    deliveryStatus = radioValue;
                    var oTable = $('#InvoiceTable').DataTable();
                    oTable.draw();
                }
            });



            $('#update').click(function () {
                var arrInv = [];
                var InvItem = new Object();
                $("#loader").show();
                $('input[type="checkbox"]').each(function () {
                    //if checkbox is checked
                    if (this.checked) {
                        console.log("InvoiceID:" + this.value);
                        InvItem = new Object();
                        InvItem.invoiceID = this.value;
                        InvItem.statusID = $('#statusID').val();
                        InvItem.createdUtc = $('#executeDate').val();
                        arrInv.push(InvItem);

                    }
                });
                for (var i = 0; i < arrInv.length; i++) {
                    console.log("Item in Array: " + i);
                    console.log(arrInv[i].invoiceID);
                }
                ajaxInvoiceUpdate(arrInv);

            });

            var id = 3;

            $("#InvoiceTable").on('xhr.dt', function (e, settings, json, xhr) {
            }).DataTable({
                lengthMenu: [25, 100, 150, 200],
                //dom: '<lfB<t>ip>',
                //dom: '<lfB<t><"top"i>p>',
                "dom": '<"top"lBfp><"top"i>rt<><"clear">',
                buttons: ['excel', 'copy', 'csv', 'pdf', 'print'],
                "fixedHeader": {
                    "header": true,
                    "footer": true
                },
                "responsive": true,
                "processing": true, // for show progress bar
                "serverSide": true, // for process server side
                "filter": true, // this is for disable filter (search box)
                "orderMulti": false, // for disable multiple column at once
                "ajax": {

                    "url": "/Invoice/Index?handler=Paging",
                     "headers":
                        {
                            "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                        },
                    "type": "POST",
                    /*"contentType": "application/x-www-form-urlencoded",*/
                    "data": function (d) {
                       // d.search.value = $('#tripId').val();
                        //d.filterItemID = 4;
                        d.deliveryStatus = deliveryStatus;
                    },
                    "datatype": "json"
                },
                "columnDefs":
                [   {
                        /*Invoice ID is not visible and is not searchable*/
                        "targets": [0],
                        "visible": false,
                        "searchable": false
                    },
                    {
                        /*Invoice Number is visible and is  searchable*/
                        "targets": [1],
                        "visible": true,
                        "searchable": true
                    },
                    {
                        /*Invoice Printed Date No is visible and is searchable*/
                        "targets": [2],
                        "visible": true,
                        "searchable": true
                        },
                    {
                        /*Status is visible and is searchable*/
                        "targets": [3],
                        "visible": true,
                        "searchable": true
                    }

                ],
                "columns": [
                    { "data": "invoiceID", "name": "invoiceID", "autoWidth": true },
                    { "data": "invoiceNumber", "name": "invoiceNumber", "autoWidth": true },
                    {
                        data: "invoicePrintDate",
                        render: function (data, type, row) {
                            return moment(data).format("DD-MM-YYYY HH:mm");
                        }
                    },
                    { "data": "statusName", "name": "statusName", "autoWidth": true },
                    {
                        'render': function (data, type, full, meta) {
                            return '<input type="checkbox" name="id[]" value="'
                                + $('<div/>').text(full.invoiceID).html() + '">';
                        }
                    },
                    {
                        "render": function (data, type, full, meta) {
                            return "<p data-placement='top' data-toggle='tooltip' title='Edit'><button class='btn btn-primary btn-xs' data-title='Edit' data-toggle='modal' data-target='#edit' onclick='window.location.href=\"/Invoice/InvoiceStatus/" + full.invoiceID + "\"\'><span class='glyphicon glyphicon-pencil'></span></button></p>";
                        }
                    }
                ]

                });//Invoice Table
             $('#datetimepicker1').datetimepicker(
                    {
                        format: "YYYY/MM/DD hh:mm:ss A",
                        date: '@Model.ExecuteDate'
                    }
                );
        });//Document Ready end.
        function ajaxInvoiceUpdate(obj) {
            console.log("Update Invoice Status: in Insert Ajax Call: " + JSON.stringify(obj));
            $.ajax({
                type: "PUT",
                url: "/Invoice/Index?handler=Update",
                    headers:
                        {
                            "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                        },
                    contentType: "application/json",
                    dataType: "json",
                    data: JSON.stringify(obj),
                success: function (data) {
                        $("#loader").hide();
                        console.log(data);
                        //redraw the available Invoice paging table
                        if (!$.fn.DataTable.isDataTable('#InvoiceTable')) {
                            getInvoiceData();
                        }
                        else {
                            var oTable = $('#InvoiceTable').DataTable();
                            oTable.draw();
                        }
                        $("#modalHeader").text("Invoice Processing Status");
                        $("#modalMessage").text(data);
                        $("#myModal").modal("show");
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        $("#modalHeader").text("Invoice Processing Status");
                        $("#modalMessage").text(data);
                        $("#myModal").modal("show");
                    }
                });//ajax update
        }


    </script>
}
