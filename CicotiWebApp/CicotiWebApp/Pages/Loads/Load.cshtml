@page  "{LoadID?}"
@model CicotiWebApp.Pages.Loads.LoadModel

@{
    ViewData["Title"] = "Create";
    Layout = "~/Pages/_LayoutDataTables.cshtml";
}
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@functions{
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Model.HttpContext).RequestToken;
    }
}

<br />
<br />
<h4>Load Details</h4>
<div id="loader"></div>
<hr />
<div id="accordion">
    <div class="card" id="cardSection1">
        <div class="card-header" id="headingOne">
            <h5 class="mb-0">
                <button class="btn-primary" data-toggle="collapse" data-target="#collapseOne" aria-expanded="true"
                        aria-controls="collapseOne" >
                    Section 1: LoadName, LoadDate, Driver, Vehicle
                </button>
            </h5>
        </div>
        <div id="collapseOne" class="collapse" aria-labelledby="headingOne" data-parent="#accordion">
            <div class="row" id="divLoadHeaderForm">
                <div class="col-md-4">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input type="hidden" asp-for="Load.LoadID" id="loadID" />
                    <input type="hidden" asp-for="Load.VehicleID" id="vehicleID" />
                    <input type="hidden" asp-for="Load.DriverID" id="driverID" />
                    <input type="hidden" asp-for="Load.DestinationID" id="destinationID" />
                    <div id="divLoadStatusID" class="form-group">
                        <label asp-for="Load.LoadStatusID" class="control-label">Load Status</label>
                        <select asp-for="Load.LoadStatusID" id="loadStatusID"
                                asp-items="Model.LoadStatusSL" class="form-control">
                            <option value="">--Select Load Status--</option>
                        </select>
                        <span asp-validation-for="Load.LoadStatusID" class="text-danger"></span>
                    </div>
                    <div class="form-group" id="divLoadName">
                        <label class="control-label">Load Name</label>
                        <input asp-for="Load.LoadName" id="loadName" class="form-control" />
                        <span asp-validation-for="Load.LoadName" class="text-danger"></span>
                    </div>
                    <div class="form-group" id="divLoadDateTime">
                        <label asp-for="Load.LoadDate" class="control-label">Loading Date</label>
                        <div class='input-group date' id='datetimepicker1'>
                            <input asp-for="Load.LoadDate" type="text" class="form-control" id="loadDate" />
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                            <span asp-validation-for="Load.LoadDate" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="form-group" id="divCreatedBy">
                        <label id="createdByLabel" class="control-label">Created By</label>
                        <input asp-for="Load.User.UserName" id="createdBy" class="form-control" />
                    </div>
                    <div class="form-group" id="divCreatedDate">
                        <label id="createdDateLabel" class="control-label">Create Date</label>
                        <input asp-for="Load.CreatedUtc" id="createdDate" class="form-control" />
                    </div>
                    <div id="DriverSection">
                        <div class="input-group" id="divDriverBtns">
                            <span class="input-group-btn">
                                <input type="button" value="Find Driver." class="btn btn-default" id="findDriverBtn" />
                            </span>
                            <span class="input-group-btn">
                                <input type="button" value="Show Driver" class="btn btn-default" id="showDriverBtn" />
                            </span>
                        </div>

                        <br />
                        <div id="divDriverInputFieldsSection" class="well-sm" style="background-color:lightgray">
                            <div class="form-group" id="divDriverFirstName">
                                <label class="control-label">Driver First Name</label>
                                <input asp-for="Load.Driver.FirstName" id="driverFirstName" class="form-control" />
                                <span asp-validation-for="Load.Driver.FirstName" class="text-danger"></span>
                            </div>
                            <div class="form-group" id="divDriverSecondName">
                                <label class="control-label">Driver Surname</label>
                                <input asp-for="Load.Driver.Surname" id="driverSurname" class="form-control" />
                                <span asp-validation-for="Load.Driver.Surname" class="text-danger"></span>
                            </div>
                            <div class="form-group" id="divDriverCellNumber">
                                <label class="control-label">Driver Cell Number</label>
                                <input asp-for="Load.Driver.CellNumber" id="driverCellNumber" class="form-control" />
                                <span asp-validation-for="Load.Driver.CellNumber" class="text-danger"></span>
                            </div>
                        </div>
                        <div id="divDriverTable" style="width:90%; margin:0 auto;">
                            <table id="DriverTable" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0">
                                <thead>
                                    <tr>
                                        <th>DriverID</th>
                                        <th>First Name</th>
                                        <th>Surname</th>
                                        <th>Cell Number</th>
                                        <th>Select</th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                    <p></p>
                    <div id="VehicleSection">
                        <div class="input-group" id="divVehicleBtns">
                            <span class="input-group-btn">
                                <input type="button" value="Find Vehicle" class="btn btn-default" id="findVehicleBtn" />
                            </span>
                            <span class="input-group-btn">
                                <input type="button" value="Show Vehicle" class="btn btn-default" id="showVehicleBtn" />
                            </span>
                        </div>
                        <p></p>
                        <div id="divVehicleInputFieldsSection" class="well-sm" style="background-color:lightgray">
                            <div class="form-group" id="divSubContractor">
                                <label class="control-label">SubContractor</label>
                                <input asp-for="Load.Vehicle.SubContractor.Name" id="subContractor" class="form-control" />
                                <span asp-validation-for="Load.Vehicle.SubContractor.Name" class="text-danger"></span>
                            </div>
                            <div class="form-group" id="divVehicleRegistrationNo">
                                <label class="control-label">Vehicle Registration</label>
                                <input asp-for="Load.Vehicle.RegistrationNumber" id="registrationNumber" class="form-control" />
                                <span asp-validation-for="Load.Vehicle.RegistrationNumber" class="text-danger"></span>
                            </div>
                            <div class="form-group" id="divVehicleType">
                                <label class="control-label">Vehicle Type</label>
                                <input asp-for="Load.Vehicle.VechileType.Description" id="vehicleType" class="form-control" />
                                <span asp-validation-for="Load.Vehicle.VechileType.Description" class="text-danger"></span>
                            </div>
                        </div>
                        <div id="divVehicleTable" style="width:90%; margin:0 auto;">
                            <table id="VehicleTable" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0">
                                <thead>
                                    <tr>
                                        <th>VehicleID</th>
                                        <th>Registration Number</th>
                                        <th>Vehicle Type</th>
                                        <th>Sub Contractor</th>
                                        <th>Select</th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                    <br />
                    <div id="DestinationSection">
                        <div class="input-group" id="divDestBtns">
                            <span class="input-group-btn">
                                <input type="button" value="Find Dest." class="btn btn-default" id="findDestinationBtn" />
                            </span>
                            <span class="input-group-btn">
                                <input type="button" value="Show Dest." class="btn btn-default" id="showDestinationBtn" />
                            </span>
                        </div>
                        <br />

                        <div id="divDestinationInputFieldsSection" class="well-sm" style="background-color:lightgray">

                            <div class="form-group" id="divFromLocation">
                                <label class="control-label">From: Country:Province:Location</label>
                                <input asp-for="Load.Destination.StartLocation.LocationName" id="startLocationName" class="form-control" />
                                <span asp-validation-for="Load.Destination.StartLocation.LocationName" class="text-danger"></span>
                            </div>
                            <div class="form-group" id="divToLocation">
                                <label class="control-label">To: Country:Province:Location</label>
                                <input asp-for="Load.Destination.EndLocation.LocationName" id="endLocationName" class="form-control" />
                                <span asp-validation-for="Load.Destination.EndLocation.LocationName" class="text-danger"></span>
                            </div>
                            <div class="form-group" id="divDistance">
                                <label asp-for="Load.Destination.Distance" class="control-label"></label>
                                <input asp-for="Load.Destination.Distance" id="distance" class="form-control" />
                                <span asp-validation-for="Load.Destination.Distance" class="text-danger"></span>
                            </div>
                            <div class="form-check" id="divChkBox">
                                <input type="checkbox" class="form-check-input" id="revDestChkBox">
                                <label class="form-check-label" for="revDestChkBox">Reverse Dest.</label>
                            </div>
                        </div>
                        <div id="divDestinationTableSection">
                            @{await Html.RenderPartialAsync("_DestinationPartial");}
                        </div>
                    </div>
                    <div class="form-group">
                        <input type="button" value="Save" class="btn btn-default  " id="savebtnSection1" />
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="card" id="cardSection2">
        <div class="card-header" id="headingTwo">
            <h5 class="mb-0">
                <button class="btn-primary" data-toggle="collapse" data-target="#collapseTwo" aria-expanded="true" id="btnInvoiceSelection"
                        aria-controls="collapseTwo">
                    Section 2: Invoices Available for Delivery
                </button>
                <br />
                
            </h5>
        </div>
        <div id="collapseTwo" class="collapse" aria-labelledby="headingTwo" data-parent="#accordion">
            <div class="row" id="divInvoiceSelectionSection">

                <div id="InvoiceSelectionSection">
                    <div id="divInvoiceTable" style="width:90%; margin:0 auto;">
                        <table id="InvoiceTable" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0">
                            <thead>
                                <tr>
                                    <th>InvoiceID</th>
                                    <th>Invoice Number</th>
                                    <th>Invoice Printed Date</th>
                                    <th>Invoice Status</th>
                                    <th>Select</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
                <br />
                <div class="form-group">
                    @*  <input type="button" value="Save" class="btn btn-default" id="savebtnSection2" />*@
                    <button type="button" class="btn btn-primary" id="savebtnSection2">Save</button>
                    <button type="button" class="btn btn-primary" id="refreshInvoices">Refresh List</button>
                </div>
                @*<div class="form-group">
                    <button class='btn btn-danger' />
                </div>*@
                @*<button class='btn btn-primary btn-xs' data-title='Edit'
                        data-toggle='modal' data-target='#edit' id="refreshInvoices">
                    <span class='glyphicon glyphicon-refresh'></span>
                </button>*@
                @*<button class='btn btn-primary btn-xs' data-title='Edit'
                        data-toggle='modal' data-target='#edit' id="saveInvoices">
                    <span class='glyphicon glyphicon-floppy-save'></span>
                </button>
                <button class='btn btn-primary' data-title='Edit' value="Refreh"
                        data-toggle='modal' data-target='#edit' id="saveInvoices">
                    <span class='glyphicon glyphicon-floppy-save'></span>*@
                @*</button>*@
            </div>

        </div>
    </div>
    <div class="card" id="cardSection3">
        <div class="card-header" id="headingThree">
            <h5 class="mb-0">
                <button class="btn-primary" data-toggle="collapse" data-target="#collapseThree" aria-expanded="true" id="btnInvoiceSelected"
                        aria-controls="collapseThree">
                     @*   style="background-color:darkblue; border:outset; font-size:small; border-color:white">*@
                    Section 3: Invoice Delivery List
                </button>
            </h5>
        </div>
        <div id="collapseThree" class="collapse" aria-labelledby="headingThree" data-parent="#accordion">
            <div class="row" id="divInvoicesSelected">
                <div id="InvoiceSelectedSection">
                    <div id="divInvoiceSelectedTable" style="width:90%; margin:0 auto;">
                        <table id="InvoiceSelectedTable" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0">
                            <thead>
                                <tr>
                                    <th>InvoiceID</th>
                                    <th>Invoice Number</th>
                                    <th>Invoice Printed Date</th>
                                    <th>Invoice Status</th>
                                    <th>Delete</th>
                                </tr>
                            </thead>
                        </table>
                        <div class="form-group">
                            <button type="button" class="btn btn-default " id="savebtnSection3">Delete</button>
                            <button type="button" class="btn btn-default" id="refreshSelectedInvoices">Refresh List</button>
                        </div>
                    </div>
                </div>
                <br />
            </div>
        </div>

    </div>
    <div class="card" id="cardSection4">
        <div class="card-header" id="headingFour">
            <h5 class="mb-0">
                <button class="btn-primary" data-toggle="collapse" data-target="#collapseFour" aria-expanded="true" id="btnPrintLoadDetails"
                        aria-controls="collapseFour">
                    Section 4: Print Load Details
                </button>
            </h5>
            
        </div>
        <div id="collapseFour" class="collapse" aria-labelledby="headingFour" data-parent="#accordion">
            <div style="width:90%; margin:0 auto;">
                    <div class="form-group">
                        <button type="button" class="btn btn-default" id="createLoadTable">Create Load Table</button>
                    </div>
                    <div id="divLoadDetails">
                        <br />
                        <div class="=row" id="divLoadHTMLTable"></div>
                        <br />
                        <div class="form-group">
                            <input type="button" value="Print" class="btn btn-default  " id="btnPrintLoad" />
                        </div>
                    </div>
            </div>
        </div>
    </div>
    
</div>


<div>
    <a asp-page="Index">Back to List</a>
</div>

@section Scripts {
    @await Html.PartialAsync("_ModalPartial")
    @await Html.PartialAsync("_ModalConfirmPartial")
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script type="text/javascript">
        var LoadToSave = {};
        function updateDestinationInputFields(data) {

            var selectedDestination = {};
            selectedDestination = JSON.parse(data);
            $("#destinationID").val(selectedDestination.destinationID);
            $("#startLocationName").val(decodeURIComponent(selectedDestination.startLocationName));
            $("#endLocationName").val(decodeURIComponent(selectedDestination.endLocationName));
            $("#distance").val(decodeURIComponent(selectedDestination.distance));
            $("#startLocationName").prop("disabled", true);
            $("#endLocationName").prop("disabled", true);
            $("#distance").prop("disabled", true);
            $("#divDestinationInputFieldsSection").show();

            $("#divDestinationTableSection").hide();
            $('#showDestinationBtn').val("Hide Dest.");
        }

        function createHTMLLoadTable() {
            $("#loadHTMLTable").remove();
            console.log("Just after remove:");
            var result = "<table border='1' cellpadding='3' id='loadHTMLTable'>";
            result += "<tr>";
            result += "<td>Load Name: </td><td>  " + $('#loadName').val() + "</td>";
            result += "</tr>";
            result += "<tr>";
            result += "<td>Load Date: </td><td> " + $('#loadDate').val() + "</td>";
            result += "</tr>";
            result += "<tr>";
            result += "<td>Driver : </td><td> " + $('#driverFirstName').val() + " " + $('#driverSurname').val() + "</td>";
            result += "</tr>";
            result += "<tr>";
            result += "<td>Registration Number : </td><td> " + $('#registrationNumber').val() + "</td>";
            result += "</tr>";
            result += "<tr>";
            result += "<td>Vehicle Type :</td><td>  " + $('#vehicleType').val() + "</td>";
            result += "</tr>";
            result += "<tr>";
            result += "<td>SubContractor : </td><td> " + $('#subContractor').val() + "</td>";
            result += "</tr>";
            result += "<tr>";
            result += "<td>Delivery Listing</td>";
            result += "</tr>";
            result += "<tr><td><b>Invoice No<b></td><td><b>Invoice Date<b></td></tr>"
            $('#InvoiceSelectedTable').find('tr').each(function () {
                result += "<tr><td>";
                result += $(this).find("td:eq(0)").text();
                result += "</td><td>";
                result += $(this).find("td:eq(1)").text();
                result += "</td><tr>";
                
            });
            result += "</table>";
            $("#divLoadHTMLTable").append(result);
        }

        function updateVehicleInputFields(data) {
            var selectedVehicle = {};
            selectedVehicle = JSON.parse(data);
            $("#vehicleID").val(selectedVehicle.vehicleID);
            $("#registrationNumber").val(decodeURIComponent(selectedVehicle.registrationNumber));
            $("#vehicleType").val(decodeURIComponent(selectedVehicle.vehicleType));
            $("#subContractor").val(decodeURIComponent(selectedVehicle.subContractor));
            $("#divVehicleInputFieldsSection").show();
            $("#divVehicleTable").hide();
            $('#showVehicleBtn').val("Hide Vechile");
        }
        function GetDestinationData() {

            $("#DestinationTable").on('xhr.dt', function (e, settings, json, xhr) {
            }).DataTable({
                "fixedHeader": {
                    "header": true,
                    "footer": true
                },
                "responsive": true,
                "processing": true, // for show progress bar
                "serverSide": true, // for process server side
                "filter": true, // this is for disable filter (search box)aa
                "orderMulti": false, // for disable multiple column at once
                "ajax": {

                    "url": "/Destinations/Destination?handler=Paging",
                    "headers":
                    {
                        "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                    },
                    "type": "POST",
                    "datatype": "json"
                },
                "columnDefs":
                    [{
                        /*Destination ID is not visible and is not searchable*/
                        "targets": [0],
                        "visible": false,
                        "searchable": false
                    },
                    {
                        /*StartLocationID is not visible and is not searchable*/
                        "targets": [1],
                        "visible": false,
                        "searchable": false
                    },
                    {
                        /*EndLocationID is not visible and is not searchable*/
                        "targets": [2],
                        "visible": false,
                        "searchable": false
                    },
                    {
                        /*Select button  is  visible and is not searchable*/
                        "targets": [6],
                        "visible": true,
                        "searchable": false,
                        "orderable": false
                    }
                    ],
                "columns": [
                    { "data": "destinationID", "name": "destinationID", "autoWidth": true },
                    { "data": "startLocationID", "name": "startLocationID", "autoWidth": true },
                    { "data": "endLocationID", "name": "endLocationID", "autoWidth": true },
                    { "data": "startLocationName", "name": "startLocationName", "autoWidth": true },
                    { "data": "endLocationName", "name": "endLocationName", "autoWidth": true },
                    { "data": "distance", "name": "distance", "autoWidth": true },
                    //Select Data
                    {
                        "render": function (data, type, full, meta) {
                            var selectedDestination = {};
                            selectedDestination.destinationID = full.destinationID;
                            selectedDestination.startLocationID = full.startLocationID;
                            selectedDestination.endLocationID = full.endLocationID;
                            selectedDestination.startLocationName = encodeURIComponent(full.startLocationName);
                            selectedDestination.endLocationName = encodeURIComponent(full.endLocationName);
                            selectedDestination.distance = encodeURIComponent(full.distance);
                            return "<p data-placement='top' data-toggle='tooltip' title='Select'><button id='btnDest' class='btn btn-primary btn-xs' data-title='Select' data-toggle='modal' data-target='#edit' onclick=updateDestinationInputFields('" + JSON.stringify(selectedDestination) + "')><span class='glyphicon glyphicon-pencil'></span></button></p>";
                        }
                    },
                ]
            });
        }


         function getSelectedInvoiceData() {
         $("#InvoiceSelectedTable").on('xhr.dt', function (e, settings, json, xhr) {
            }).DataTable({
                lengthMenu: [5,10,25, 100, 150, 200],
                "fixedHeader": {
                    "header": true,
                    "footer": true
                },
                "responsive": true,
                "processing": true, // for show progress bar
                "serverSide": true, // for process server side
                "filter": true, // this is for disable filter (search box)
                "orderMulti": false, // for disable multiple column at once
                "ajax": {

                    "url": "/Loads/Load?handler=InvoiceSelectedPaging",
                     "headers":
                        {
                            "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                        },
                    "type": "POST",
                    /*"contentType": "application/x-www-form-urlencoded",*/
                    "data": function (d) {
                       // d.search.value = $('#tripId').val();
                        //This is just test
                        d.loadID = $('#loadID').val() ;
                    },
                    "datatype": "json"
                    //success: function () {
                    //    createHTMLLoadTable();
                    //}
                },
                "columnDefs":
                [   {
                        /*Invoice ID is not visible and is not searchable*/
                        "targets": [0],
                        "visible": false,
                        "searchable": false
                    },
                    {
                        /*Invoice Number is visible and is  searchable*/
                        "targets": [1],
                        "visible": true,
                        "searchable": true
                    },
                    {
                        /*Invoice Printed Date No is visible and is searchable*/
                        "targets": [2],
                        "visible": true,
                        "searchable": true
                        },
                    {
                        /*Status is visible and is searchable*/
                        "targets": [3],
                        "visible": true,
                        "searchable": true
                    }

                ],
                "columns": [
                    { "data": "invoiceID", "name": "invoiceID", "autoWidth": true },
                    { "data": "invoiceNumber", "name": "invoiceNumber", "autoWidth": true },
                    { "data": "invoicePrintDate", "name": "invoicePrintDate", "autoWidth": true },
                    { "data": "statusName", "name": "statusName", "autoWidth": true },
                    {
                        'render': function (data, type, full, meta) {
                            return '<input type="checkbox" name="id[]" value="'
                                + $('<div/>').text(full.invoiceID).html() + '">';
                        }
                    }
                ]

            });//Selected Invoice Table
        }



        function getInvoiceData() {
        return $("#InvoiceTable").on('xhr.dt', function (e, settings, json, xhr) {
            }).DataTable({
                lengthMenu: [5,10,25, 100, 150, 200],
                "fixedHeader": {
                    "header": true,
                    "footer": true
                },
                "responsive": true,
                "processing": true, // for show progress bar
                "serverSide": true, // for process server side
                "filter": true, // this is for disable filter (search box)
                "orderMulti": false, // for disable multiple column at once
                "ajax": {

                    "url": "/Loads/Load?handler=InvoicePaging",
                     "headers":
                        {
                            "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                        },
                    "type": "POST",
                    /*"contentType": "application/x-www-form-urlencoded",*/
                    "data": function (d) {
                       // d.search.value = $('#tripId').val();
                        //This is just test
                        d.filterItemID = 4;
                    },
                    "datatype": "json"
                },
                "columnDefs":
                [   {
                        /*Invoice ID is not visible and is not searchable*/
                        "targets": [0],
                        "visible": false,
                        "searchable": false
                    },
                    {
                        /*Invoice Number is visible and is  searchable*/
                        "targets": [1],
                        "visible": true,
                        "searchable": true
                    },
                    {
                        /*Invoice Printed Date No is visible and is searchable*/
                        "targets": [2],
                        "visible": true,
                        "searchable": true
                        },
                    {
                        /*Status is visible and is searchable*/
                        "targets": [3],
                        "visible": true,
                        "searchable": true
                    }

                ],
                "columns": [
                    { "data": "invoiceID", "name": "invoiceID", "autoWidth": true },
                    { "data": "invoiceNumber", "name": "invoiceNumber", "autoWidth": true },
                    { "data": "invoicePrintDate", "name": "invoicePrintDate", "autoWidth": true },
                    { "data": "statusName", "name": "statusName", "autoWidth": true },
                    {
                        'render': function (data, type, full, meta) {
                            return '<input type="checkbox" name="id[]" value="'
                                + $('<div/>').text(full.invoiceID).html() + '">';
                        }
                    }
                ]

            });//Available Invoice Table
        }

        function GetVehicleData(){
            $("#VehicleTable").on('xhr.dt', function (e, settings, json, xhr) {
            }).DataTable({
                lengthMenu: [25, 100, 150, 200],
                "fixedHeader": {
                    "header": true,
                    "footer": true
                },
                "responsive": true,
                "processing": true, // for show progress bar
                "serverSide": true, // for process server side
                "filter": true, // this is for disable filter (search box)
                "orderMulti": false, // for disable multiple column at once
                "ajax": {

                    "url": "/Loads/Load?handler=VehiclePaging",
                     "headers":
                        {
                            "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                        },
                    "type": "POST",
                    /*"contentType": "application/x-www-form-urlencoded",*/
                    "datatype": "json"
                },
                "columnDefs":
                [   {
                        /*Vehicle ID is not visible and is not searchable*/
                        "targets": [0],
                        "visible": false,
                        "searchable": false
                    },
                    {
                        /*Registration Number is visible and is searchable*/
                        "targets": [1],
                        "visible": true,
                        "searchable": true
                    },
                    {
                        /*VehicleType is visible and is searchable*/
                        "targets": [2],
                        "visible": true,
                        "searchable": true
                    },
                    {
                        /*SubContractor is visible and is searchable*/
                        "targets": [3],
                        "visible": true,
                        "searchable": true
                    },
                    {
                        /*Select button  is  visible and is not searchable*/
                        "targets": [4],
                        "visible": true,
                        "searchable": false,
                        "orderable": false
                    },
                ],
                "columns": [
                    { "data": "vehicleID", "name": "vehicleID", "autoWidth": true },
                    { "data": "registrationNumber", "name": "registrationNumber", "autoWidth": true },
                    { "data": "vehicleType", "name": "vehicleType", "autoWidth": true },
                    { "data": "subContractor", "name": "subContractor", "autoWidth": true },
                    {
                        "render": function (data, type, full, meta) {
                            var selectedVehicle = {};
                            selectedVehicle.vehicleID = full.vehicleID;
                            selectedVehicle.registrationNumber = encodeURIComponent(full.registrationNumber);
                            selectedVehicle.vehicleType = encodeURIComponent(full.vehicleType);
                            selectedVehicle.subContractor = encodeURIComponent(full.subContractor);
                            return "<p data-placement='top' data-toggle='tooltip' title='Select'><button id='btnDriver' class='btn btn-primary btn-xs' data-title='Select' data-toggle='modal' data-target='#edit' onclick=updateVehicleInputFields('" + JSON.stringify(selectedVehicle) + "')><span class='glyphicon glyphicon-pencil'></span></button></p>";
                        }
                    }
                    ]
            });//End Ajax Call
        }//Function GetVehicleData

        function updateDriverInputFields(data) {
            var selectedDriver = {};
            selectedDriver = JSON.parse(data);
            $("#driverID").val(selectedDriver.driverID);
            $("#driverFirstName").val(decodeURIComponent(selectedDriver.firstName));
            $("#driverSurname").val(decodeURIComponent(selectedDriver.surname));
            $("#driverCellNumber").val(decodeURIComponent(selectedDriver.cellNumber));


            $("#divDriverInputFieldsSection").show();

            $("#divDriverTable").hide();
            $('#showDriverBtn').val("Hide Driver");
        }


        function GetDriverData() {
            $("#DriverTable").on('xhr.dt', function (e, settings, json, xhr) {
            }).DataTable({
                lengthMenu: [25, 100, 150, 200],
                "fixedHeader": {
                    "header": true,
                    "footer": true
                },
                "responsive": true,
                "processing": true, // for show progress bar
                "serverSide": true, // for process server side
                "filter": true, // this is for disable filter (search box)
                "orderMulti": false, // for disable multiple column at once
                "ajax": {

                    "url": "/Loads/Load?handler=DriverPaging",
                     "headers":
                        {
                            "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                        },
                    "type": "POST",
                    /*"contentType": "application/x-www-form-urlencoded",*/
                    "datatype": "json"
                },
                "columnDefs":
                [{
                        /*Driver ID is not visible and is not searchable*/
                        "targets": [0],
                        "visible": false,
                        "searchable": false
                    },
                    {
                        /*FirstName is visible and is not searchable*/
                        "targets": [1],
                        "visible": true,
                        "searchable": true
                    },
                    {
                        /*Surname is  visible and is  searchable*/
                        "targets": [2],
                        "visible": true,
                        "searchable": true
                    },
                    {
                        /*Cell Number  is  visible and is  searchable*/
                        "targets": [3],
                        "visible": true,
                        "searchable": true
                    },
                    {
                        /*Select button  is  visible and is not searchable*/
                        "targets": [4],
                        "visible": true,
                        "searchable": false,
                        "orderable": false
                    }
                ],
                "columns": [
                    { "data": "driverID", "name": "driverID", "autoWidth": true },
                    { "data": "firstName", "name": "firstName", "autoWidth": true },
                    { "data": "surname", "name": "surname", "autoWidth": true },
                    { "data": "cellNumber", "name": "cellNumber", "autoWidth": true },
                    {
                        "render": function (data, type, full, meta) {
                            var selectedDriver = {};
                            selectedDriver.driverID = full.driverID;
                            selectedDriver.firstName = encodeURIComponent(full.firstName);
                            selectedDriver.surname = encodeURIComponent(full.surname);
                            selectedDriver.cellNumber = encodeURIComponent(full.cellNumber);
                            return "<p data-placement='top' data-toggle='tooltip' title='Select'><button id='btnDriver' class='btn btn-primary btn-xs' data-title='Select' data-toggle='modal' data-target='#edit' onclick=updateDriverInputFields('" + JSON.stringify(selectedDriver) + "')><span class='glyphicon glyphicon-pencil'></span></button></p>";
                        }
                    }
                ]

            });//Drivers Table
        }//getVehicleData

        function ajaxInvoiceUpdate(obj) {
            console.log("Update Invoice Status: in Insert Ajax Call: " + JSON.stringify(obj));
           return $.ajax({
                type: "POST",
                url: "/Loads/Load?handler=Update",
                    headers:
                        {
                            "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                        },
                    contentType: "application/json",
                    dataType: "json",
                    data: JSON.stringify(obj),
                    success: function (data) {
                        console.log(data);
                        $("#modalHeader").text("Invoice Status Processing");
                        $("#modalMessage").text(data);
                        $("#myModal").modal("show");
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        $("#modalHeader").text("Invoice Status Processing");
                        $("#modalMessage").text("Invoice Status Not Processed Not Updated.");
                        $("#myModal").modal("show");
                    }
                });//ajax update
            }

         function ajaxInvoiceDelete(obj) {
            console.log("Delete Invoice Status: in Insert Ajax Call: " + JSON.stringify(obj));
           return $.ajax({
                type: "POST",
                url: "/Loads/Load?handler=RemoveInvoiceItems",
                    headers:
                        {
                            "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                        },
                    contentType: "application/json",
                    dataType: "json",
                    data: JSON.stringify(obj),
                    success: function (data) {
                        console.log(data);
                        $("#modalHeader").text("Invoice Processing Status");
                        $("#modalMessage").text(data);
                        $("#myModal").modal("show");
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        $("#modalHeader").text("Invoice Processing Status");
                        $("#modalMessage").text("Invoice Status Not Processed Not Updated.");
                        $("#myModal").modal("show");
                    }
                });//ajax update
        }

        function ajaxLoadUpdate(obj) {
            console.log("ajaxLoadUpdate Function runs: " + JSON.stringify(obj));
            $.ajax({
                type: "PUT",
                url: "/Loads/Load?handler=UpdateLoad",

                headers:
                {
                    "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                },
                contentType: "application/json",
                dataType: "json",
                data: JSON.stringify(obj),
                success: function (data) {
                    console.log(data);
                    console.log("Load Data successfully returned from DataBase");
                    $("#modalHeader").text("Load Section 1 Processing Status");
                    $("#modalMessage").text(data);
                    $("#myModal").modal("show");
                    },
                    error: function (jqXHR, textStatus, errorThrown) {

                        $("#modalHeader").text("Load Processing Status");
                        $("#modalMessage").text("Load was not updated.");
                        $("#myModal").modal("show");
                    }
                });//ajax Update Section 1
        }
        function ajaxLoadInsert(obj) {
            console.log("Load Section 1: in Insert Ajax Call: " + JSON.stringify(obj));
            $.ajax({
                type: "POST",
                url: "/Loads/Load?handler=InsertLoad",
                    headers:
                        {
                            "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                        },
                    contentType: "application/json",
                    dataType: "json",
                    data: JSON.stringify(obj),
                    success: function (data) {
                        console.log(data);
                        $("#loadID").val(data.loadID);
                        $("#createdBy").val(data.user.userName);
                        $("#createdBy").show();
                        $("#createdByLabel").show();

                        $("#createdDate").val(moment(data.createdUtc).format("YYYY-MM-DDTHH:mm"));
                        $("#createdDate").show();
                        $("#createdDateLabel").show();
                        //format: "YYYY/MM/DD hh:mm:ss A",
                        console.log("Hiden Load Id:" + $("#loadID").val());

                        $("#modalHeader").text("Load Processing Status");
                        $("#modalMessage").text(data.loadID + " was inserted.");
                        $("#myModal").modal("show");
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        $("#modalHeader").text("Load Processing Status");
                        $("#modalMessage").text("Load Data Not Updated.");
                        $("#myModal").modal("show");
                    }
                });//ajax insert
        }

        function ajaxInvoiceStatusUpdate(obj) {
            console.log("Update Invoice Status: in Insert Ajax Call: " + JSON.stringify(obj));
            $.ajax({
                type: "POST",
                url: "/Invoice/Index?handler=Update",
                    headers:
                        {
                            "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
                        },
                    contentType: "application/json",
                    dataType: "json",
                    data: JSON.stringify(obj),
                    success: function (data) {
                        console.log(data);
                        $("#modalHeader").text("Invoice Status Processing Status");
                        $("#modalMessage").text(" Invoice Status was inserted.");
                        $("#myModal").modal("show");
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        $("#modalHeader").text("Invoice Status Processing Status");
                        $("#modalMessage").text("Invoice Status Not Processed Not Updated.");
                        $("#myModal").modal("show");
                    }
                });//ajax update
        }



        $(document).ready(function ()
        {
            //hide the loader
            $("#loader").hide();
            //$("#loader").show();
            //hide the destination table and  capture fields when the form starts up
            $("#divDestinationTableSection").hide();
            $("#divDestinationInputFieldsSection").hide();
            
            //Save the Load Header Details
            $('#savebtnSection1').click(function () {
                LoadToSave.loadName = $('#loadName').val();
                LoadToSave.loadDate = $('#loadDate').val();
                LoadToSave.vehicleID = $('#vehicleID').val();
                LoadToSave.driverID = $('#driverID').val();
                LoadToSave.loadStatusID = $('#loadStatusID').val();
                LoadToSave.destinationID = $('#destinationID').val();
                LoadToSave.reverseDestinationID = $('#revDestChkBox:checked').val() ? true : false;
                if ($('#destinationID').val().length == 0) {
                    $("#modalHeader").text("Load Processing Status");
                    $("#modalMessage").text("Load Not Updated: Please select a Destination.");
                    $("#myModal").modal("show");
                    return;
                }

                if ($('#loadID').val().length > 0 && $('#loadID').val() > 0) {
                    LoadToSave.loadID = $('#loadID').val();
                    $(window).scrollTop(0);
                    $('#loadID').show();
                    $.when(ajaxLoadUpdate(LoadToSave)).done(function (a1) {
                        $('#loadID').hide();
                    });
                    //ajaxLoadUpdate(LoadToSave);
                }
                else {
                    $(window).scrollTop(0);
                    $('#loadID').show();
                    $.when(ajaxLoadInsert(LoadToSave)).done(function (a1) {
                        $('#loadID').hide();
                    });
                  //  ajaxLoadInsert(LoadToSave);
                }
            });

            //Refresh the Available Invoices Section
            $('#refreshInvoices').click(function () {
                 if (!$.fn.DataTable.isDataTable('#InvoiceTable')) {
                    getInvoiceData();
                }
                else {
                    var oTable = $('#InvoiceTable').DataTable();
                     oTable.draw();
                }
            });
            //Refresh the Selected Invoices Section
            $('#refreshSelectedInvoices').click(function () {
                if (!$.fn.DataTable.isDataTable('#InvoiceSelectedTable')) {
                    getSelectedInvoiceData();
                }
                else {
                    var oTable = $('#InvoiceSelectedTable').DataTable();
                    oTable.draw();
                }
            });

            //Save the Invoices Selected for Delivery Section
            $('#savebtnSection2').click(function () {
                var arrInv = [];
                var InvItem = new Object();

                $('input[type="checkbox"]').each(function () {
                    //if checkbox is checked
                    if (this.checked) {
                        console.log("InvoiceID:" + this.value);
                        InvItem = new Object();
                        InvItem.invoiceID = this.value;
                        InvItem.loadID = $('#loadID').val();
                        arrInv.push(InvItem);
                    }
                });
                $(window).scrollTop(0);
                $('#loadID').show();
                $.when(ajaxInvoiceUpdate(arrInv)).done(function (a1) {
                    if (!$.fn.DataTable.isDataTable('#InvoiceTable')) {
                        getInvoiceData();
                    }
                    else {
                        var oTable = $('#InvoiceTable').DataTable();
                        oTable.draw();
                    }
                    if (!$.fn.DataTable.isDataTable('#InvoiceSelectedTable')) {
                        getSelectedInvoiceData();
                    }
                    else {
                        var oTable = $('#InvoiceSelectedTable').DataTable();
                        oTable.draw();
                    }
                    $('#loadID').hide();
                });
                //ajaxInvoiceUpdate(arrInv);
                
                createHTMLLoadTable();
                //update the selected items paging table
            });

            //Save the Invoices which have been Deleted from the Delivery Section
            $('#savebtnSection3').click(function () {
                var arrInv = [];
                var InvItem = new Object();

                $('#divInvoiceSelectedTable').find(':checkbox').each(function () {
                    //if checkbox is checked
                    if (this.checked) {
                        console.log("InvoiceID:" + this.value);
                        InvItem = new Object();
                        InvItem.invoiceID = this.value;
                        InvItem.loadID = $('#loadID').val();
                        arrInv.push(InvItem);
                    }
                });
                $.when(ajaxInvoiceDelete(arrInv)).done(function (a1) {
                    if (!$.fn.DataTable.isDataTable('#InvoiceSelectedTable')) {
                        getSelectedInvoiceData();
                    }
                    else {
                        console.log("In Invoice Selected Redraw");
                        var oTable = $('#InvoiceSelectedTable').DataTable();
                        oTable.draw();
                    }
                    if (!$.fn.DataTable.isDataTable('#InvoiceTable')) {
                        getInvoiceData();
                    }
                    else {
                        var oTable = $('#InvoiceTable').DataTable();
                        oTable.draw();
                    }
                   
                });


              //  ajaxInvoiceDelete(arrInv);
                //redraw the available Invoice paging table
                
               
                //update the selected items paging table
                createHTMLLoadTable();
            });

            $('#createLoadTable').click(function () {
                
                //$.when(ajaxInvoiceDelete(arrInv)).done(function (a1) {
                   

                //});


                //update the selected items paging table
                createHTMLLoadTable();
            });

            $('#btnPrintLoadDetails').click(function () {
                if (!$.fn.DataTable.isDataTable('#InvoiceSelectedTable')) {
                    getSelectedInvoiceData();
                }
                $("#loadHTMLTable").remove();
              //  createHTMLLoadTable();
            });
            $('#btnPrintLoad').click(function () {
                var divToPrint = document.getElementById("loadHTMLTable");
                newWin = window.open("");
                newWin.document.write(divToPrint.outerHTML);
                newWin.print();
                newWin.close();
            });
             $('#datetimepicker1').datetimepicker(
                    {
                        format: "YYYY/MM/DD hh:mm:ss A",
                       // date: '@Model.ExecuteDate'
                    }
                );
            //hide the driver table and the driver capture fields when the form starts up
            $("#divDriverTable").hide();
            $("#divDriverInputFieldsSection").hide();
            $("#driverFirstName").prop("disabled", true);
            $("#driverSurname").prop("disabled", true);
            $("#driverCellNumber").prop("disabled", true);

            //hide the vehicle table and the vehicle capture fields when the form starts up
            $("#divVehicleTable").hide();
            $("#divVehicleInputFieldsSection").hide();
            $("#registrationNumber").prop("disabled", true);
            $("#vehicleType").prop("disabled", true);
            $("#subContractor").prop("disabled", true);

            $("#createdBy").prop("disabled", true);
            $("#createdDate").prop("disabled", true);

            //Find Destination
            $('#findDestinationBtn').click(function () {
                $("#divDestinationTableSection").show();
                $('#divDestinationInputFieldsSection').hide();
                if (!$.fn.DataTable.isDataTable('#DestinationTable')) {
                    GetDestinationData();
                }
            });

            //Find Driver
            $('#findDriverBtn').click(function () {
                $("#divDriverTable").show();
                $('#divDriverInputFieldsSection').hide();
                if (!$.fn.DataTable.isDataTable('#DriverTable')) {
                    GetDriverData();
                }
            });
            //Reverse Destination Start and End Boxes
            $('#revDestChkBox').click(function () {
                var temp = $("#startLocationName").val();
                $("#startLocationName").val($("#endLocationName").val());
                $("#endLocationName").val(temp);
            });
            //Show and Hide Destination
            $('#showDestinationBtn').click(function () {
                if ($('#showDestinationBtn').val() == "Show Dest.") {
                    $("#divDestinationTableSection").hide();
                    $('#divDestinationInputFieldsSection').show();
                    $('#showDestinationBtn').val("Hide Dest.");
                }
                else {
                    $("#divDestinationTableSection").hide();
                    $('#divDestinationInputFieldsSection').hide();
                    $('#showDestinationBtn').val("Show Dest.");
                }
            });

            //Show and Hide Driver Button
            $('#showDriverBtn').click(function () {
                if ($('#showDriverBtn').val() == "Show Driver") {
                    $("#divDriverTable").hide();
                    $('#divDriverInputFieldsSection').show();
                    $('#showDriverBtn').val("Hide Driver");
                }
                else {
                    $("#divDriverTable").hide();
                    $('#divDriverInputFieldsSection').hide();
                    $('#showDriverBtn').val("Show Driver");
                }
            });
            //Find Vehicle
            $('#findVehicleBtn').click(function () {
                $("#divVehicleTable").show();
                $('#divVehicleInputFieldsSection').hide();
                if (!$.fn.DataTable.isDataTable('#VehicleTable')) {
                    GetVehicleData();
                }
            });
            //Show and Hide Vehicle Button
            $('#showVehicleBtn').click(function () {
                if ($('#showVehicleBtn').val() == "Show Vehicle") {
                    $("#divVehicleTable").hide();
                    $('#divVehicleInputFieldsSection').show();
                    $('#showVehicleBtn').val("Hide Vehicle");
                }
                else {
                    $("#divVehicleTable").hide();
                    $('#divVehicleInputFieldsSection').hide();
                    $('#showVehicleBtn').val("Show Vehicle");
                }
            });
            $('#btnInvoiceSelection').click(function () {
                $("#divInvoiceTable").show();

                if (!$.fn.DataTable.isDataTable('#InvoiceTable')) {
                    getInvoiceData();
                }
            });
            $('#btnInvoiceSelected').click(function () {
                $("#divInvoiceSelectedTable").show();
                console.log("In button Invoice Selected");
                if (!$.fn.DataTable.isDataTable('#InvoiceSelectedTable')) {
                    getSelectedInvoiceData();
                }
            });
           $('#datetimepicker1').datetimepicker(
                    {
                        format: "YYYY/MM/DD hh:mm:ss A",
                        date: '@Model.Load.LoadDate'
                    }
                );
        });//Document Ready end.

    </script>

}
