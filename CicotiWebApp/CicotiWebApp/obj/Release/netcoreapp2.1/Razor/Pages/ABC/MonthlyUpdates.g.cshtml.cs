#pragma checksum "C:\Users\wallyf\source\repos\CicotiWebApp\CicotiWebApp\Pages\ABC\MonthlyUpdates.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e56916d4326f3a20eca62ccb4de085250623396f"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(CicotiWebApp.Pages.ABC.Pages_ABC_MonthlyUpdates), @"mvc.1.0.razor-page", @"/Pages/ABC/MonthlyUpdates.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.RazorPageAttribute(@"/Pages/ABC/MonthlyUpdates.cshtml", typeof(CicotiWebApp.Pages.ABC.Pages_ABC_MonthlyUpdates), null)]
namespace CicotiWebApp.Pages.ABC
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\wallyf\source\repos\CicotiWebApp\CicotiWebApp\Pages\_ViewImports.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#line 2 "C:\Users\wallyf\source\repos\CicotiWebApp\CicotiWebApp\Pages\_ViewImports.cshtml"
using CicotiWebApp;

#line default
#line hidden
#line 3 "C:\Users\wallyf\source\repos\CicotiWebApp\CicotiWebApp\Pages\_ViewImports.cshtml"
using CicotiWebApp.Data;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e56916d4326f3a20eca62ccb4de085250623396f", @"/Pages/ABC/MonthlyUpdates.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8ced8cd96f08a857c0609865a58388ea14041c11", @"/Pages/_ViewImports.cshtml")]
    public class Pages_ABC_MonthlyUpdates : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-page", "Create", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("text-danger"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("for", new global::Microsoft.AspNetCore.Html.HtmlString("periodCopyFrom"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("control-label col-xs-2"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-control"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("periodCopyFrom"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("for", new global::Microsoft.AspNetCore.Html.HtmlString("periodCopyTo"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("periodCopyTo"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-control col-xs-10"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("periodToUpdate"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("control-label"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("periodToCheck"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 2 "C:\Users\wallyf\source\repos\CicotiWebApp\CicotiWebApp\Pages\ABC\MonthlyUpdates.cshtml"
  
    Layout = "_LayoutDataTables";

#line default
#line hidden
            BeginContext(295, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 14 "C:\Users\wallyf\source\repos\CicotiWebApp\CicotiWebApp\Pages\ABC\MonthlyUpdates.cshtml"
  
    ViewData["Title"] = "ABC";

#line default
#line hidden
            BeginContext(336, 39, true);
            WriteLiteral("\r\n<h2>ABC Maintenance</h2>\r\n\r\n<p>\r\n    ");
            EndContext();
            BeginContext(375, 39, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bc9a2129dd554414a58ab2ac1740c79b", async() => {
                BeginContext(396, 14, true);
                WriteLiteral("Run Procedures");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Page = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(414, 33, true);
            WriteLiteral("\r\n</p>\r\n<div id=\"loader\"></div>\r\n");
            EndContext();
            BeginContext(447, 66, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("div", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1ae1295503674ffbbfc31dc01b2cd278", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper);
#line 24 "C:\Users\wallyf\source\repos\CicotiWebApp\CicotiWebApp\Pages\ABC\MonthlyUpdates.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper.ValidationSummary = global::Microsoft.AspNetCore.Mvc.Rendering.ValidationSummary.ModelOnly;

#line default
#line hidden
            __tagHelperExecutionContext.AddTagHelperAttribute("asp-validation-summary", __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationSummaryTagHelper.ValidationSummary, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(513, 869, true);
            WriteLiteral(@"

<div id=""accordion"">
    <div class=""card"" id=""cardSection1"">
        <div class=""card-header"" id=""headingOne"">
            <h5 class=""mb-0"">
                <button class=""btn-primary"" data-toggle=""collapse"" data-target=""#collapseOne"" aria-expanded=""true""
                        aria-controls=""collapseOne"">
                    Section 1: Monthly Base Tables
                </button>
            </h5>
        </div>
        <div id=""collapseOne"" class=""collapse"" aria-labelledby=""headingOne"" data-parent=""#accordion"">
            <div class=""row"" id=""divDuplicateHeaderForm"">
                <div id=""divCopyOnePeriodToAnother"">
                    <h4>Duplicate Allocations From One Period to Another</h4>
                    <div class=""row"">
                        <div class=""form-group"" id=""divCopyFromPeriod"">
                            ");
            EndContext();
            BeginContext(1382, 109, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("label", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "764f6bdc3ab44b298e6717688efd2217", async() => {
                BeginContext(1472, 11, true);
                WriteLiteral("Copy Period");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper);
#line 42 "C:\Users\wallyf\source\repos\CicotiWebApp\CicotiWebApp\Pages\ABC\MonthlyUpdates.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => __model.ActCostPeriod.Period);

#line default
#line hidden
            __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1491, 87, true);
            WriteLiteral("\r\n                            <div class=\"col-xs-10\">\r\n                                ");
            EndContext();
            BeginContext(1578, 81, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("input", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "3af4832ab8e14d39978690ad46894a87", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper);
#line 44 "C:\Users\wallyf\source\repos\CicotiWebApp\CicotiWebApp\Pages\ABC\MonthlyUpdates.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => __model.ActCostPeriod.Period);

#line default
#line hidden
            __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1659, 66, true);
            WriteLiteral("\r\n                            </div>\r\n                            ");
            EndContext();
            BeginContext(1725, 75, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("span", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ce3143b8d49340ebbcf30a4abd2e78a7", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper);
#line 46 "C:\Users\wallyf\source\repos\CicotiWebApp\CicotiWebApp\Pages\ABC\MonthlyUpdates.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => __model.ActCostPeriod.Period);

#line default
#line hidden
            __tagHelperExecutionContext.AddTagHelperAttribute("asp-validation-for", __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1800, 232, true);
            WriteLiteral("\r\n                        </div>\r\n                        <br />\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"form-group\" id=\"divCopyToPeriod\">\r\n                            ");
            EndContext();
            BeginContext(2032, 108, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("label", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "9876a3b48b34466e8611697df810bbd0", async() => {
                BeginContext(2120, 12, true);
                WriteLiteral("Paste Period");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper);
#line 52 "C:\Users\wallyf\source\repos\CicotiWebApp\CicotiWebApp\Pages\ABC\MonthlyUpdates.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => __model.ActCostPeriod.Period);

#line default
#line hidden
            __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(2140, 87, true);
            WriteLiteral("\r\n                            <div class=\"col-xs-10\">\r\n                                ");
            EndContext();
            BeginContext(2227, 79, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("input", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "7bde0bb86aed42f297eda35d93b5d7a4", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper);
#line 54 "C:\Users\wallyf\source\repos\CicotiWebApp\CicotiWebApp\Pages\ABC\MonthlyUpdates.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => __model.ActCostPeriod.Period);

#line default
#line hidden
            __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(2306, 66, true);
            WriteLiteral("\r\n                            </div>\r\n                            ");
            EndContext();
            BeginContext(2372, 75, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("span", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d1110383b9c74b7b8e043c7edd5a0572", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper);
#line 56 "C:\Users\wallyf\source\repos\CicotiWebApp\CicotiWebApp\Pages\ABC\MonthlyUpdates.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => __model.ActCostPeriod.Period);

#line default
#line hidden
            __tagHelperExecutionContext.AddTagHelperAttribute("asp-validation-for", __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(2447, 3402, true);
            WriteLiteral(@"
                        </div>
                    </div>
                    <br />
                </div>

                <div id=""divAccAllocationToPeriod"" class=""wrapper"">
                    <h5>Update the Account Allocation Per Principle (P4P acc and goodwill)</h5>
                    <div class=""form-group"">
                        <input type=""submit"" value=""Run"" class=""btn btn-default"" id=""runAccPrinciple"" />
                    </div>
                    <p id=""runAccAllocationToPeriodMsg""></p>
                </div>
                <br />
                <div id=""divCashCollectionCostPerDepot"" class=""wrapper"">
                    <h5>Update the Cash Collection Cost Per Depot: Used to allocate Bank Charges</h5>
                    <div class=""form-group"">
                        <input type=""submit"" value=""Run"" class=""btn btn-default"" id=""runCashCollection"" />
                    </div>
                    <p id=""runCashCollectionCostPerDepotMsg""></p>
                </div>
  ");
            WriteLiteral(@"              <br />
                <div id=""divInsuranceCost"" class=""wrapper"">
                    <h5>Update the Insurance Type Cost Per Period</h5>
                    <div class=""form-group"">
                        <input type=""submit"" value=""Run"" class=""btn btn-default"" id=""runInsuranceCosts"" />
                    </div>
                    <p id=""runInsuranceCostMsg""></p>
                </div>
                <br />
                <div id=""divSpecificEmployeeAllocationPerSilo"" class=""wrapper"">
                    <h5>Update the Employee Allocation Per Silo</h5>
                    <div class=""form-group"">
                        <input type=""submit"" value=""Run"" class=""btn btn-default"" id=""runAllocateSilo"" />
                    </div>
                    <p id=""runSpecificEmployeeAllocationPerSiloMsg""></p>
                </div>
                <br />
                <div id=""divInterCompany"" class=""wrapper"">
                    <h5>Update InterCompany Cost</h5>
                 ");
            WriteLiteral(@"   <div class=""form-group"">
                        <input type=""submit"" value=""Run"" class=""btn btn-default"" id=""runInterCompany"" />
                    </div>
                    <p id=""runInterCompanyMsg""></p>
                </div>
                <br />
                <div id=""divRentCostPerPrincipal"" class=""wrapper"">
                    <h5>Update Allocation Rental Per Principal </h5>
                    <div class=""form-group"">
                        <input type=""submit"" value=""Run"" class=""btn btn-default"" id=""runAllocRental"" />
                    </div>
                    <p id=""runAllocRentalMsg""></p>
                </div>
            </div> 
            </div>
        </div>
    </div>
    <div class=""card"" id=""cardSection2"">
        <div class=""card-header"" id=""headingTwo"">
            <h5 class=""mb-0"">
                <button class=""btn-primary"" data-toggle=""collapse"" data-target=""#collapseTwo"" aria-expanded=""true"" id=""btnInvoiceSelection""
                        aria-cont");
            WriteLiteral(@"rols=""collapseTwo"">
                    Section 2: CheckLists of Imports
                </button>
                <br />
            </h5>
            
        </div>
    <div id=""collapseTwo"" class=""collapse"" aria-labelledby=""headingTwo"" data-parent=""#accordion"">
            <div class=""row"" id=""divImportsCheckList"">
");
            EndContext();
            BeginContext(5906, 2305, true);
            WriteLiteral(@"                <div class=""col-xs-12"">
                    -Item 1: Payroll File for Period: Table: ActCostPayrollCost;
                    <br />
                    -Item 2: Debtors File for the Month: Table: ActCostDebtors;
                    <br />
                    -Item 3: Stock File for the Month: Table: ActCostStockOnHand;
                    -Item 3.1. Check if all the SKUs are in the SKU Table before the stock is imported
                    <br />
                    -Item 4: Creditors File for the Month: Table: ActCostPrincipleBalance;
                    <br />
                    -Item 5: Account Balance Movement: Table: ActCostAccountBalance
                    <br />
                    -Item 6: Kilometres Travelled: Table: VehicleKms
                    <br />
                    -Item 7: Exchange Rates for Period
                    <br />
                    -Item 8: Import All Sales For the Period
                    <br />
                    -Item 8.1: Run Stored Pr");
            WriteLiteral(@"ocedure on CICOTDW: CreateSalesPerAccountPerPeriod
                    <br />
                    -Item 8.2: Run Stored Procedure on CICOTDW: CreateSalesPerDay
                    <br />
                    -Item 9: Import Current Employee Data Into EmployeeABC Table
                    <br />
                    -Item 10: Import Current Vehicle Data Into VehicleABC Table
                </div>
            </div>
    </div>
    <div class=""card"" id=""cardSection3"">
        <div class=""card-header"" id=""headingThree"">
            <h5 class=""mb-0"">
                <button class=""btn-primary"" data-toggle=""collapse"" data-target=""#collapseThree"" aria-expanded=""true"" id=""btnInvoiceSelected""
                        aria-controls=""collapseThree"">
                    Section 3: Run Scripts for the Period
                </button>
            </h5>
        </div>
        <div id=""collapseThree"" class=""collapse"" aria-labelledby=""headingThree"" data-parent=""#accordion"">
            <div class=""row"" id=""d");
            WriteLiteral(@"ivScriptsToRun"">
                <div class=""form-group"" id=""divCopyFromPeriod"">
                    <label for=""periodToUpdate"" class=""control-label col-xs-2"">Period to Update</label>
                    <div class=""col-xs-10"">
                        ");
            EndContext();
            BeginContext(8211, 91, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("input", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "2f6a6d27424148d6b903f7b5fc4a3914", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper);
#line 169 "C:\Users\wallyf\source\repos\CicotiWebApp\CicotiWebApp\Pages\ABC\MonthlyUpdates.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => __model.ActCostPeriod.Period);

#line default
#line hidden
            __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(8302, 50, true);
            WriteLiteral("\r\n                    </div>\r\n                    ");
            EndContext();
            BeginContext(8352, 75, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("span", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5afcd2fabb7c4903b86a89ab88954543", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper);
#line 171 "C:\Users\wallyf\source\repos\CicotiWebApp\CicotiWebApp\Pages\ABC\MonthlyUpdates.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => __model.ActCostPeriod.Period);

#line default
#line hidden
            __tagHelperExecutionContext.AddTagHelperAttribute("asp-validation-for", __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(8427, 6036, true);
            WriteLiteral(@"
                </div>
                <div id=""divScripts"">
                    <br />
                    <div id=""divTransCount"" class=""wrapper"">
                        <h5>1 - Update Tranaction Count: sp Step1_ActCostTransactionCount</h5>
                        <div class=""form-group"">
                            <input type=""submit"" value=""Run"" class=""btn btn-default"" id=""runTransCount"" />
                        </div>
                        <p id=""runTransCountMsg""></p>
                    </div>
                    <br />
                    <div id=""divSalesUpdate"" class=""wrapper"">
                        <h5>2 - Update Sales and Cost of Sales: sp Step1_SalesUpdatePerPeriod</h5>
                        <div class=""form-group"">
                            <input type=""submit"" value=""Run"" class=""btn btn-default"" id=""runSalesUpdate"" />
                        </div>
                        <p id=""runSalesUpdateMsg""></p>
                    </div>
                    <br />
      ");
            WriteLiteral(@"              <div id=""divEmloyeeUpdate"" class=""wrapper"">
                        <h5>3 - Archive Employees Table: sp Step2_EmployeeArchive</h5>
                        <div class=""form-group"">
                            <input type=""submit"" value=""Run"" class=""btn btn-default"" id=""runEmployeeArchive"" />
                        </div>
                        <p id=""runEmployeeArchiveMsg""></p>
                    </div>
                    <br />
                    <div id=""divVehicleUpdate"" class=""wrapper"">
                        <h5>4- Archive Vehicle Table: sp Step2_VehicleArchive</h5>
                        <div class=""form-group"">
                            <input type=""submit"" value=""Run"" class=""btn btn-default"" id=""runVehicleArchive"" />
                        </div>
                        <p id=""runVehicleArchiveMsg""></p>
                    </div>
                    <br />
                    <div id=""divPalletsUpdate"" class=""wrapper"">
                        <h5>5- Pallet Updat");
            WriteLiteral(@"e: Step2_PalletsOnHand</h5>
                        <div class=""form-group"">
                            <input type=""submit"" value=""Run"" class=""btn btn-default"" id=""runPalletUpdate"" />
                        </div>
                        <p id=""runPalletUpdateMsg""></p>
                    </div>
                    <br />
                    <div id=""divAccBalanceUpdate"" class=""wrapper"">
                        <h5>6- Update Movement on GL Accounts: sp Step3_AccBalanceMovementUpdate</h5>
                        <div class=""form-group"">
                            <input type=""submit"" value=""Run"" class=""btn btn-default"" id=""runBalanceMovement"" />
                        </div>
                        <p id=""runBalanceMovementMsg""></p>
                    </div>
                    <br />
                    <div id=""divStaffAllocation"" class=""wrapper"">
                        <h5>7- Staff Allocation Per Principle: sp Step4_ActCostTableStaffAllocation</h5>
                        <div class=");
            WriteLiteral(@"""form-group"">
                            <input type=""submit"" value=""Run"" class=""btn btn-default"" id=""runStaffPerPrinciple"" />
                        </div>
                        <p id=""runStaffPerPrincipleMsg""></p>
                    </div>
                    <br />
                    <div id=""divVehicleAllocation"" class=""wrapper"">
                        <h5>8- Vehicle Allocation Per Principle: sp Step4_ActCostTableVehicleAllocation</h5>
                        <div class=""form-group"">
                            <input type=""submit"" value=""Run"" class=""btn btn-default"" id=""runVehicleAllocation"" />
                        </div>
                        <p id=""runVehicleAllocationMsg""></p>
                    </div>
                    <br />
                    <div id=""divMacCostAllocation"" class=""wrapper"">
                        <h5>9- Create ABC Table Per Principle: Step5_AllocateManAccCostsToActivities</h5>
                        <div class=""form-group"">
                        ");
            WriteLiteral(@"    <input type=""submit"" value=""Run"" class=""btn btn-default"" id=""runAllocatedCosts"" />
                        </div>
                        <p id=""runAllocatedCostMsg""></p>
                    </div>
                    <br />
                    <div id=""divDebtorsAllocation"" class=""wrapper"">
                        <h5>10- Create Debtors Per Principle: Step6_CreateDebtorsSplitByPrincipal</h5>
                        <div class=""form-group"">
                            <input type=""submit"" value=""Run"" class=""btn btn-default"" id=""runDebtorsAllocation"" />
                        </div>
                        <p id=""runDebtorsAllocationMsg""></p>
                    </div>
                    <br />
                    <div id=""divInvestmentTable"" class=""wrapper"">
                        <h5>11- Create Investment Table Per Principle: Step7_CreateInvestmentTable</h5>
                        <div class=""form-group"">
                            <input type=""submit"" value=""Run"" class=""btn btn-defa");
            WriteLiteral(@"ult"" id=""runInvestmentTable"" />
                        </div>
                        <p id=""runInvestmentTableMsg""></p>
                    </div>
                    <br />
                </div>
        </div>

    </div>
    <div class=""card"" id=""cardSection4"">
        <div class=""card-header"" id=""headingFour"">
            <h5 class=""mb-0"">
                <button class=""btn-primary"" data-toggle=""collapse"" data-target=""#collapseFour"" aria-expanded=""true"" id=""btnPrintLoadDetails""
                        aria-controls=""collapseFour"">
                    Section 4: Control Check List 
                </button>
            </h5>

        </div>
        <div id=""collapseFour"" class=""collapse"" aria-labelledby=""headingFour"" data-parent=""#accordion"">
            <div style=""width:90%; margin:0 auto;"">
                <div class=""form-group"" id=""divCopyFromPeriod"">
                    ");
            EndContext();
            BeginContext(14463, 84, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("label", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8f4aa18b99e14407ac64139e7cb8b9a8", async() => {
                BeginContext(14523, 16, true);
                WriteLiteral("Period to Update");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper);
#line 280 "C:\Users\wallyf\source\repos\CicotiWebApp\CicotiWebApp\Pages\ABC\MonthlyUpdates.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => __model.ActCostPeriod.Period);

#line default
#line hidden
            __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(14547, 22, true);
            WriteLiteral("\r\n                    ");
            EndContext();
            BeginContext(14569, 80, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("input", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "0b3db0d4bd0c41dab1ed8d1994548bf7", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper);
#line 281 "C:\Users\wallyf\source\repos\CicotiWebApp\CicotiWebApp\Pages\ABC\MonthlyUpdates.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => __model.ActCostPeriod.Period);

#line default
#line hidden
            __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(14649, 22, true);
            WriteLiteral("\r\n                    ");
            EndContext();
            BeginContext(14671, 75, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("span", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7fe145c67bae44a693d1631581165ab1", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper);
#line 282 "C:\Users\wallyf\source\repos\CicotiWebApp\CicotiWebApp\Pages\ABC\MonthlyUpdates.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => __model.ActCostPeriod.Period);

#line default
#line hidden
            __tagHelperExecutionContext.AddTagHelperAttribute("asp-validation-for", __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(14746, 268, true);
            WriteLiteral(@"
                </div>
                <div class=""form-group"">
                    <button type=""button"" class=""btn btn-default"" id=""createProcessTable"">Process</button>
                </div>
            </div>
        </div>
    </div>

</div>
</div>

");
            EndContext();
            BeginContext(15015, 40, false);
#line 294 "C:\Users\wallyf\source\repos\CicotiWebApp\CicotiWebApp\Pages\ABC\MonthlyUpdates.cshtml"
Write(await Html.PartialAsync("_ModalPartial"));

#line default
#line hidden
            EndContext();
            BeginContext(15055, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(15058, 47, false);
#line 295 "C:\Users\wallyf\source\repos\CicotiWebApp\CicotiWebApp\Pages\ABC\MonthlyUpdates.cshtml"
Write(await Html.PartialAsync("_ModalConfirmPartial"));

#line default
#line hidden
            EndContext();
            BeginContext(15105, 4, true);
            WriteLiteral("\r\n\r\n");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(15127, 2907, true);
                WriteLiteral(@"

    <script type=""text/javascript"">
        $(document).ready(function ()
        {
            $(""#loader"").hide();
            $(""#runTransCount"").click(function () {
                $(""#loader"").show();
                $(window).scrollTop(0);
                runTransactionCount();
                //$.when(runTransactionCount()).done(function (a1) {
                //    $(""#loader"").hide();
                //});
            });
            $(""#runSalesUpdate"").click(function () {
                SalesUpdate();
            });
            $(""#runEmployeeArchive"").click(function () {
                EmployeeUpdate();
            });
            $(""#runVehicleArchive"").click(function () {
                VehicleUpdate();
            });
            $(""#runPalletUpdate"").click(function () {
                Pallets();
            });
            $(""#runBalanceMovement"").click(function () {
                AccBalanceUpdate();
            });
            $(""#runStaffPerPrinciple"").c");
                WriteLiteral(@"lick(function () {
                StaffPerPrincipleUpdate();
            });
            $(""#runVehicleAllocation"").click(function () {
                VehicleAllocationUpdate();
            });
            $(""#runAllocatedCosts"").click(function () {
                allocateCosts();
            });
            $(""#runDebtorsAllocation"").click(function () {
                $(""#loader"").show();
                $(window).scrollTop(0);
                DebtorsAllocationUpdate();
            });
            $(""#runInvestmentTable"").click(function () {
                InvestmentUpdate();
            });
            $(""#runAccPrinciple"").click(function () {
                DuplicateAccountPerPrinciple();
            });
            $(""#runCashCollection"").click(function () {
                DuplicateCashCollectionCost();
            });
            $(""#runInsuranceCosts"").click(function () {
                DuplicateInsuranceCost();
            });
            $(""#runAllocateSilo"").click(fu");
                WriteLiteral(@"nction () {
                DuplicateStaffSiloCost();
            });
            $(""#runInterCompany"").click(function () {
                DuplicateInterCompanyCost();
            });
            $(""#runAllocRental"").click(function () {
                DuplicateAllocRentalCost();
            });
            
          

        });//Document Ready end.

        function allocateCosts()
        {
            console.log(""Allocate Costs function"");
            var obj = {};
            obj.Period = $(""#periodToUpdate"").val();
            console.log(JSON.stringify(obj));
            console.log(obj.Period);

            $.ajax({
                type: ""POST"",
                url: '/ABC/MonthlyUpdates?handler=AllocateCosts',
                headers:
                    {
                        ""RequestVerificationToken"": '");
                EndContext();
                BeginContext(18035, 25, false);
#line 379 "C:\Users\wallyf\source\repos\CicotiWebApp\CicotiWebApp\Pages\ABC\MonthlyUpdates.cshtml"
                                                Write(GetAntiXsrfRequestToken());

#line default
#line hidden
                EndContext();
                BeginContext(18060, 1307, true);
                WriteLiteral(@"'
                    },
                contentType: ""application/json"",
                dataType: ""json"",
               // data: $(""#period"").val(),
                data: JSON.stringify(obj),
                success: function (msg) {
                        $(""#modalHeader"").text(""Allocate Costs Processing Status"");
                        $(""#modalMessage"").text(msg);
                    $(""#myModal"").modal(""show"");
                    $(""#runAllocatedCostMsg"").html(msg);
                    },
                    error: function () {
                        $(""#modalHeader"").text(""Allocate Costs Processing Status"");
                        $(""#modalMessage"").text(msg);
                        $(""#myModal"").modal(""show"");
                    }
                });//ajax
        }
        function runTransactionCount()
        {
            console.log(""Transaction Count function"");
            var obj = {};
            obj.Period = $(""#periodToUpdate"").val();
            console.log");
                WriteLiteral(@"(JSON.stringify(obj));
            console.log(obj.Period);

            $.ajax({
                type: ""POST"",
                url: '/ABC/MonthlyUpdates?handler=TransCount',
                headers:
                    {
                        ""RequestVerificationToken"": '");
                EndContext();
                BeginContext(19368, 25, false);
#line 411 "C:\Users\wallyf\source\repos\CicotiWebApp\CicotiWebApp\Pages\ABC\MonthlyUpdates.cshtml"
                                                Write(GetAntiXsrfRequestToken());

#line default
#line hidden
                EndContext();
                BeginContext(19393, 1314, true);
                WriteLiteral(@"'
                    },
                contentType: ""application/json"",
                dataType: ""json"",
               // data: $(""#period"").val(),
                data: JSON.stringify(obj),
                success: function (msg) {
                        $(""#modalHeader"").text(""Transaction Count Status"");
                    $(""#modalMessage"").text(msg);
                    $(""#loader"").hide();
                    $(""#myModal"").modal(""show"");
                    $(""#runTransCountMsg"").html(msg);
                    },
                    error: function () {
                        $(""#modalHeader"").text(""Transaction Count Status"");
                        $(""#modalMessage"").text(msg);
                        $(""#myModal"").modal(""show"");
                    }
                });//ajax
        }
        function SalesUpdate()
        {
            console.log(""Sales Update function"");
            var obj = {};
            obj.Period = $(""#periodToUpdate"").val();
            conso");
                WriteLiteral(@"le.log(JSON.stringify(obj));
            console.log(obj.Period);

            $.ajax({
                type: ""POST"",
                url: '/ABC/MonthlyUpdates?handler=SalesUpdate',
                headers:
                    {
                        ""RequestVerificationToken"": '");
                EndContext();
                BeginContext(20708, 25, false);
#line 444 "C:\Users\wallyf\source\repos\CicotiWebApp\CicotiWebApp\Pages\ABC\MonthlyUpdates.cshtml"
                                                Write(GetAntiXsrfRequestToken());

#line default
#line hidden
                EndContext();
                BeginContext(20733, 1314, true);
                WriteLiteral(@"'
                    },
                contentType: ""application/json"",
                dataType: ""json"",
               // data: $(""#period"").val(),
                data: JSON.stringify(obj),
                success: function (msg) {
                        $(""#modalHeader"").text(""Sales Update Status"");
                    $(""#modalMessage"").text(msg);
                    $(""#loader"").hide();
                    $(""#myModal"").modal(""show"");
                    $(""#runSalesUpdateMsg"").html(msg);
                    },
                    error: function () {
                        $(""#modalHeader"").text(""Sales Update Status"");
                        $(""#modalMessage"").text(msg);
                        $(""#myModal"").modal(""show"");
                    }
                });//ajax
        }
         function EmployeeUpdate()
        {
            console.log(""Employee Update function"");
            var obj = {};
            obj.Period = $(""#periodToUpdate"").val();
            console");
                WriteLiteral(@".log(JSON.stringify(obj));
            console.log(obj.Period);

            $.ajax({
                type: ""POST"",
                url: '/ABC/MonthlyUpdates?handler=EmloyeeUpdate',
                headers:
                    {
                        ""RequestVerificationToken"": '");
                EndContext();
                BeginContext(22048, 25, false);
#line 477 "C:\Users\wallyf\source\repos\CicotiWebApp\CicotiWebApp\Pages\ABC\MonthlyUpdates.cshtml"
                                                Write(GetAntiXsrfRequestToken());

#line default
#line hidden
                EndContext();
                BeginContext(22073, 1276, true);
                WriteLiteral(@"'
                    },
                contentType: ""application/json"",
                dataType: ""json"",
                data: JSON.stringify(obj),
                success: function (msg) {
                        $(""#modalHeader"").text(""Employee Update Status"");
                    $(""#modalMessage"").text(msg);
                    $(""#loader"").hide();
                    $(""#myModal"").modal(""show"");
                    $(""#runEmployeeArchiveMsg"").html(msg);
                    },
                    error: function () {
                        $(""#modalHeader"").text(""Employee Update Status"");
                        $(""#modalMessage"").text(msg);
                        $(""#myModal"").modal(""show"");
                    }
                });//ajax
        }
        function VehicleUpdate()
        {
            console.log(""Vehicle Update function"");
            var obj = {};
            obj.Period = $(""#periodToUpdate"").val();
            console.log(JSON.stringify(obj));
          ");
                WriteLiteral("  console.log(obj.Period);\r\n\r\n            $.ajax({\r\n                type: \"POST\",\r\n                url: \'/ABC/MonthlyUpdates?handler=VehicleUpdate\',\r\n                headers:\r\n                    {\r\n                        \"RequestVerificationToken\": \'");
                EndContext();
                BeginContext(23350, 25, false);
#line 509 "C:\Users\wallyf\source\repos\CicotiWebApp\CicotiWebApp\Pages\ABC\MonthlyUpdates.cshtml"
                                                Write(GetAntiXsrfRequestToken());

#line default
#line hidden
                EndContext();
                BeginContext(23375, 1261, true);
                WriteLiteral(@"'
                    },
                contentType: ""application/json"",
                dataType: ""json"",
                data: JSON.stringify(obj),
                success: function (msg) {
                        $(""#modalHeader"").text(""Vehicle Update Status"");
                    $(""#modalMessage"").text(msg);
                    $(""#loader"").hide();
                    $(""#myModal"").modal(""show"");
                    $(""#runVehicleArchiveMsg"").html(msg);
                    },
                    error: function () {
                        $(""#modalHeader"").text(""Vehicle Update Status"");
                        $(""#modalMessage"").text(msg);
                        $(""#myModal"").modal(""show"");
                    }
                });//ajax
        }
        function Pallets()
        {
            console.log(""Pallets Update function"");
            var obj = {};
            obj.Period = $(""#periodToUpdate"").val();
            console.log(JSON.stringify(obj));
            console");
                WriteLiteral(".log(obj.Period);\r\n\r\n            $.ajax({\r\n                type: \"POST\",\r\n                url: \'/ABC/MonthlyUpdates?handler=Pallets\',\r\n                headers:\r\n                    {\r\n                        \"RequestVerificationToken\": \'");
                EndContext();
                BeginContext(24637, 25, false);
#line 541 "C:\Users\wallyf\source\repos\CicotiWebApp\CicotiWebApp\Pages\ABC\MonthlyUpdates.cshtml"
                                                Write(GetAntiXsrfRequestToken());

#line default
#line hidden
                EndContext();
                BeginContext(24662, 1276, true);
                WriteLiteral(@"'
                    },
                contentType: ""application/json"",
                dataType: ""json"",
                data: JSON.stringify(obj),
                success: function (msg) {
                    $(""#modalHeader"").text(""Pallets Update Status"");
                    $(""#modalMessage"").text(msg);
                    $(""#loader"").hide();
                    $(""#myModal"").modal(""show"");
                    $(""#runPalletUpdateMsg"").html(msg);
                    },
                    error: function () {
                        $(""#modalHeader"").text(""Pallets Update Status"");
                        $(""#modalMessage"").text(msg);
                        $(""#myModal"").modal(""show"");
                    }
                });//ajax
        }
        function AccBalanceUpdate()
        {
            console.log(""AccBalance Update function"");
            var obj = {};
            obj.Period = $(""#periodToUpdate"").val();
            console.log(JSON.stringify(obj));
            c");
                WriteLiteral("onsole.log(obj.Period);\r\n\r\n            $.ajax({\r\n                type: \"POST\",\r\n                url: \'/ABC/MonthlyUpdates?handler=AccBalanceUpdate\',\r\n                headers:\r\n                    {\r\n                        \"RequestVerificationToken\": \'");
                EndContext();
                BeginContext(25939, 25, false);
#line 573 "C:\Users\wallyf\source\repos\CicotiWebApp\CicotiWebApp\Pages\ABC\MonthlyUpdates.cshtml"
                                                Write(GetAntiXsrfRequestToken());

#line default
#line hidden
                EndContext();
                BeginContext(25964, 1302, true);
                WriteLiteral(@"'
                    },
                contentType: ""application/json"",
                dataType: ""json"",
                data: JSON.stringify(obj),
                success: function (msg) {
                    $(""#modalHeader"").text(""AccBalance Update Status"");
                    $(""#modalMessage"").text(msg);
                    $(""#loader"").hide();
                    $(""#myModal"").modal(""show"");
                    $(""#runBalanceMovementMsg"").html(msg);
                    },
                    error: function () {
                        $(""#modalHeader"").text(""AccBalance  Update Status"");
                        $(""#modalMessage"").text(msg);
                        $(""#myModal"").modal(""show"");
                    }
                });//ajax
        }

        function StaffPerPrincipleUpdate()
        {
            console.log(""Staff Allocation Update function"");
            var obj = {};
            obj.Period = $(""#periodToUpdate"").val();
            console.log(JSON.string");
                WriteLiteral(@"ify(obj));
            console.log(obj.Period);

            $.ajax({
                type: ""POST"",
                url: '/ABC/MonthlyUpdates?handler=StaffPerPrinciple',
                headers:
                    {
                        ""RequestVerificationToken"": '");
                EndContext();
                BeginContext(27267, 25, false);
#line 606 "C:\Users\wallyf\source\repos\CicotiWebApp\CicotiWebApp\Pages\ABC\MonthlyUpdates.cshtml"
                                                Write(GetAntiXsrfRequestToken());

#line default
#line hidden
                EndContext();
                BeginContext(27292, 1321, true);
                WriteLiteral(@"'
                    },
                contentType: ""application/json"",
                dataType: ""json"",
                data: JSON.stringify(obj),
                success: function (msg) {
                    $(""#modalHeader"").text(""Staff Per Principle Update Status"");
                    $(""#modalMessage"").text(msg);
                    $(""#loader"").hide();
                    $(""#myModal"").modal(""show"");
                    $(""#runStaffPerPrincipleMsg"").html(msg);
                    },
                    error: function () {
                        $(""#modalHeader"").text(""Staff Per Principle Update Status"");
                        $(""#modalMessage"").text(msg);
                        $(""#myModal"").modal(""show"");
                    }
                });//ajax
        }
        function VehicleAllocationUpdate()
        {
            console.log(""Vehicle Allocation Update function"");
            var obj = {};
            obj.Period = $(""#periodToUpdate"").val();
            cons");
                WriteLiteral(@"ole.log(JSON.stringify(obj));
            console.log(obj.Period);

            $.ajax({
                type: ""POST"",
                url: '/ABC/MonthlyUpdates?handler=VehicleAllocation',
                headers:
                    {
                        ""RequestVerificationToken"": '");
                EndContext();
                BeginContext(28614, 25, false);
#line 638 "C:\Users\wallyf\source\repos\CicotiWebApp\CicotiWebApp\Pages\ABC\MonthlyUpdates.cshtml"
                                                Write(GetAntiXsrfRequestToken());

#line default
#line hidden
                EndContext();
                BeginContext(28639, 1303, true);
                WriteLiteral(@"'
                    },
                contentType: ""application/json"",
                dataType: ""json"",
                data: JSON.stringify(obj),
                success: function (msg) {
                    $(""#modalHeader"").text(""Vehicle Allocation Status"");
                    $(""#modalMessage"").text(msg);
                    $(""#loader"").hide();
                    $(""#myModal"").modal(""show"");
                    $(""#runVehicleAllocationMsg"").html(msg);
                    },
                    error: function () {
                        $(""#modalHeader"").text(""Vehicle Allocation Status"");
                        $(""#modalMessage"").text(msg);
                        $(""#myModal"").modal(""show"");
                    }
                });//ajax
        }
        function DebtorsAllocationUpdate()
        {
            console.log(""Debtors Allocation Update function"");
            var obj = {};
            obj.Period = $(""#periodToUpdate"").val();
            console.log(JSON.str");
                WriteLiteral(@"ingify(obj));
            console.log(obj.Period);

            $.ajax({
                type: ""POST"",
                url: '/ABC/MonthlyUpdates?handler=AllocateDebtors',
                headers:
                    {
                        ""RequestVerificationToken"": '");
                EndContext();
                BeginContext(29943, 25, false);
#line 670 "C:\Users\wallyf\source\repos\CicotiWebApp\CicotiWebApp\Pages\ABC\MonthlyUpdates.cshtml"
                                                Write(GetAntiXsrfRequestToken());

#line default
#line hidden
                EndContext();
                BeginContext(29968, 1325, true);
                WriteLiteral(@"'
                    },
                contentType: ""application/json"",
                dataType: ""json"",
                data: JSON.stringify(obj),
                success: function (msg) {
                    $(""#modalHeader"").text(""Debtors Allocation Per Principle Update Status"");
                    $(""#modalMessage"").text(msg);
                    $(""#loader"").hide();
                    $(""#myModal"").modal(""show"");
                    $(""#runDebtorsAllocationMsg"").html(msg);
                    },
                    error: function () {
                        $(""#modalHeader"").text(""Debtors Allocation Per Principle Update Status"");
                        $(""#modalMessage"").text(msg);
                        $(""#myModal"").modal(""show"");
                    }
                });//ajax
        }
        function InvestmentUpdate()
        {
            console.log(""Investment Update function"");
            var obj = {};
            obj.Period = $(""#periodToUpdate"").val();
     ");
                WriteLiteral(@"       console.log(JSON.stringify(obj));
            console.log(obj.Period);

            $.ajax({
                type: ""POST"",
                url: '/ABC/MonthlyUpdates?handler=Investment',
                headers:
                    {
                        ""RequestVerificationToken"": '");
                EndContext();
                BeginContext(31294, 25, false);
#line 702 "C:\Users\wallyf\source\repos\CicotiWebApp\CicotiWebApp\Pages\ABC\MonthlyUpdates.cshtml"
                                                Write(GetAntiXsrfRequestToken());

#line default
#line hidden
                EndContext();
                BeginContext(31319, 1470, true);
                WriteLiteral(@"'
                    },
                contentType: ""application/json"",
                dataType: ""json"",
                data: JSON.stringify(obj),
                success: function (msg) {
                    $(""#modalHeader"").text(""Investment Update Status"");
                    $(""#modalMessage"").text(msg);
                    $(""#loader"").hide();
                    $(""#myModal"").modal(""show"");
                    $(""#runInvestmentTableMsg"").html(msg);
                    },
                    error: function () {
                        $(""#modalHeader"").text(""Investment Update Status"");
                        $(""#modalMessage"").text(msg);
                        $(""#myModal"").modal(""show"");
                    }
                });//ajax
        }
     function DuplicateAccountPerPrinciple()
        {
         console.log(""Acount Per Principle Update function"");
         var obj = {};
         var periodFrom = {};
         var periodTo = {};
         periodFrom.Period = $(""");
                WriteLiteral(@"#periodCopyFrom"").val();
         periodTo.Period = $(""#periodCopyTo"").val();
         obj.CopyFromPeriod = periodFrom;
         obj.CopyToPeriod = periodTo;
         console.log(JSON.stringify(obj));

            $.ajax({
                type: ""POST"",
                url: '/ABC/MonthlyUpdates?handler=AccountAllocationPerPrinciple',
                headers:
                    {
                        ""RequestVerificationToken"": '");
                EndContext();
                BeginContext(32790, 25, false);
#line 738 "C:\Users\wallyf\source\repos\CicotiWebApp\CicotiWebApp\Pages\ABC\MonthlyUpdates.cshtml"
                                                Write(GetAntiXsrfRequestToken());

#line default
#line hidden
                EndContext();
                BeginContext(32815, 1500, true);
                WriteLiteral(@"'
                    },
                contentType: ""application/json"",
                dataType: ""json"",
                data: JSON.stringify(obj),
                success: function (msg) {
                    $(""#modalHeader"").text(""Allocation Per Account Per Principal Update Status"");
                        $(""#modalMessage"").text(msg);
                    $(""#myModal"").modal(""show"");
                    $(""#runAccAllocationToPeriodMsg"").html(msg);
                    },
                    error: function (msg) {
                        $(""#modalHeader"").text(""Allocation Per Account Per Principal Update Status"");
                        $(""#modalMessage"").text(""There is an error"");
                        $(""#myModal"").modal(""show"");
                    }
                });//ajax
        }
        function DuplicateCashCollectionCost()
        {
         console.log(""Cash Collection Cost Update function"");
         var obj = {};
         var periodFrom = {};
         var periodT");
                WriteLiteral(@"o = {};
         periodFrom.Period = $(""#periodCopyFrom"").val();
         periodTo.Period = $(""#periodCopyTo"").val();
         obj.CopyFromPeriod = periodFrom;
         obj.CopyToPeriod = periodTo;
         console.log(JSON.stringify(obj));

            $.ajax({
                type: ""POST"",
                url: '/ABC/MonthlyUpdates?handler=CashCollectionCost',
                headers:
                    {
                        ""RequestVerificationToken"": '");
                EndContext();
                BeginContext(34316, 25, false);
#line 773 "C:\Users\wallyf\source\repos\CicotiWebApp\CicotiWebApp\Pages\ABC\MonthlyUpdates.cshtml"
                                                Write(GetAntiXsrfRequestToken());

#line default
#line hidden
                EndContext();
                BeginContext(34341, 1458, true);
                WriteLiteral(@"'
                    },
                contentType: ""application/json"",
                dataType: ""json"",
                data: JSON.stringify(obj),
                success: function (msg) {
                    $(""#modalHeader"").text(""Cash Collection Cost Update Status"");
                        $(""#modalMessage"").text(msg);
                    $(""#myModal"").modal(""show"");
                    $(""#runCashCollectionCostPerDepotMsg"").html(msg);
                    },
                    error: function (msg) {
                        $(""#modalHeader"").text(""Cash Collection Cost Update Status"");
                        $(""#modalMessage"").text(""There is an error"");
                        $(""#myModal"").modal(""show"");
                    }
                });//ajax
        }
         function DuplicateInsuranceCost()
        {
         console.log(""Insurance Cost Update function"");
         var obj = {};
         var periodFrom = {};
         var periodTo = {};
         periodFrom.Period =");
                WriteLiteral(@" $(""#periodCopyFrom"").val();
         periodTo.Period = $(""#periodCopyTo"").val();
         obj.CopyFromPeriod = periodFrom;
         obj.CopyToPeriod = periodTo;
         console.log(JSON.stringify(obj));

            $.ajax({
                type: ""POST"",
                url: '/ABC/MonthlyUpdates?handler=InsuranceCost',
                headers:
                    {
                        ""RequestVerificationToken"": '");
                EndContext();
                BeginContext(35800, 25, false);
#line 808 "C:\Users\wallyf\source\repos\CicotiWebApp\CicotiWebApp\Pages\ABC\MonthlyUpdates.cshtml"
                                                Write(GetAntiXsrfRequestToken());

#line default
#line hidden
                EndContext();
                BeginContext(35825, 1433, true);
                WriteLiteral(@"'
                    },
                contentType: ""application/json"",
                dataType: ""json"",
                data: JSON.stringify(obj),
                success: function (msg) {
                    $(""#modalHeader"").text(""Insurance Cost Update Status"");
                        $(""#modalMessage"").text(msg);
                    $(""#myModal"").modal(""show"");
                    $(""#runInsuranceCostMsg"").html(msg);
                    },
                    error: function (msg) {
                        $(""#modalHeader"").text(""Insurance Cost Update Status"");
                        $(""#modalMessage"").text(""There is an error"");
                        $(""#myModal"").modal(""show"");
                    }
                });//ajax
        }
        function DuplicateStaffSiloCost()
        {
         console.log(""Staff Silo Cost Update function"");
         var obj = {};
         var periodFrom = {};
         var periodTo = {};
         periodFrom.Period = $(""#periodCopyFrom"").val");
                WriteLiteral(@"();
         periodTo.Period = $(""#periodCopyTo"").val();
         obj.CopyFromPeriod = periodFrom;
         obj.CopyToPeriod = periodTo;
         console.log(JSON.stringify(obj));

            $.ajax({
                type: ""POST"",
                url: '/ABC/MonthlyUpdates?handler=StaffSiloCost',
                headers:
                    {
                        ""RequestVerificationToken"": '");
                EndContext();
                BeginContext(37259, 25, false);
#line 843 "C:\Users\wallyf\source\repos\CicotiWebApp\CicotiWebApp\Pages\ABC\MonthlyUpdates.cshtml"
                                                Write(GetAntiXsrfRequestToken());

#line default
#line hidden
                EndContext();
                BeginContext(37284, 1459, true);
                WriteLiteral(@"'
                    },
                contentType: ""application/json"",
                dataType: ""json"",
                data: JSON.stringify(obj),
                success: function (msg) {
                    $(""#modalHeader"").text(""Staff Silo Cost Update Status"");
                        $(""#modalMessage"").text(msg);
                    $(""#myModal"").modal(""show"");
                    $(""#runSpecificEmployeeAllocationPerSiloMsg"").html(msg);
                    },
                    error: function (msg) {
                        $(""#modalHeader"").text(""Staff Silo Cost Update Status"");
                        $(""#modalMessage"").text(""There is an error"");
                        $(""#myModal"").modal(""show"");
                    }
                });//ajax
        }
    function DuplicateInterCompanyCost()
        {
         console.log(""InterCompany Cost Update function"");
         var obj = {};
         var periodFrom = {};
         var periodTo = {};
         periodFrom.Period = $");
                WriteLiteral(@"(""#periodCopyFrom"").val();
         periodTo.Period = $(""#periodCopyTo"").val();
         obj.CopyFromPeriod = periodFrom;
         obj.CopyToPeriod = periodTo;
         console.log(JSON.stringify(obj));

            $.ajax({
                type: ""POST"",
                url: '/ABC/MonthlyUpdates?handler=InterCompanyCost',
                headers:
                    {
                        ""RequestVerificationToken"": '");
                EndContext();
                BeginContext(38744, 25, false);
#line 878 "C:\Users\wallyf\source\repos\CicotiWebApp\CicotiWebApp\Pages\ABC\MonthlyUpdates.cshtml"
                                                Write(GetAntiXsrfRequestToken());

#line default
#line hidden
                EndContext();
                BeginContext(38769, 1443, true);
                WriteLiteral(@"'
                    },
                contentType: ""application/json"",
                dataType: ""json"",
                data: JSON.stringify(obj),
                success: function (msg) {
                    $(""#modalHeader"").text(""InterCompany Cost Update Status"");
                        $(""#modalMessage"").text(msg);
                    $(""#myModal"").modal(""show"");
                    $(""#runInterCompanyMsg"").html(msg);
                    },
                    error: function (msg) {
                        $(""#modalHeader"").text(""InterCompany Cost Update Status"");
                        $(""#modalMessage"").text(""There is an error"");
                        $(""#myModal"").modal(""show"");
                    }
                });//ajax
        }
        function DuplicateAllocRentalCost()
        {
         console.log(""Allocated Rental Cost Update function"");
         var obj = {};
         var periodFrom = {};
         var periodTo = {};
         periodFrom.Period = $(""#periodC");
                WriteLiteral(@"opyFrom"").val();
         periodTo.Period = $(""#periodCopyTo"").val();
         obj.CopyFromPeriod = periodFrom;
         obj.CopyToPeriod = periodTo;
         console.log(JSON.stringify(obj));

            $.ajax({
                type: ""POST"",
                url: '/ABC/MonthlyUpdates?handler=RentalCost',
                headers:
                    {
                        ""RequestVerificationToken"": '");
                EndContext();
                BeginContext(40213, 25, false);
#line 913 "C:\Users\wallyf\source\repos\CicotiWebApp\CicotiWebApp\Pages\ABC\MonthlyUpdates.cshtml"
                                                Write(GetAntiXsrfRequestToken());

#line default
#line hidden
                EndContext();
                BeginContext(40238, 792, true);
                WriteLiteral(@"'
                    },
                contentType: ""application/json"",
                dataType: ""json"",
                data: JSON.stringify(obj),
                success: function (msg) {
                    $(""#modalHeader"").text(""Rental Cost Update Status"");
                        $(""#modalMessage"").text(msg);
                    $(""#myModal"").modal(""show"");
                    $(""#runAllocRentalMsg"").html(msg);
                    },
                    error: function (msg) {
                        $(""#modalHeader"").text(""Rental Cost Update Status"");
                        $(""#modalMessage"").text(""There is an error"");
                        $(""#myModal"").modal(""show"");
                    }
                });//ajax
        }
        
    </script>
");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
#line 6 "C:\Users\wallyf\source\repos\CicotiWebApp\CicotiWebApp\Pages\ABC\MonthlyUpdates.cshtml"
           
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Model.HttpContext).RequestToken;
    }

#line default
#line hidden
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<WebAppFAM.Pages.ABC.IndexModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<WebAppFAM.Pages.ABC.IndexModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<WebAppFAM.Pages.ABC.IndexModel>)PageContext?.ViewData;
        public WebAppFAM.Pages.ABC.IndexModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
