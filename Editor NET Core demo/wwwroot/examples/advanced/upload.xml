<?xml version="1.0" encoding="UTF-8" ?>
<dt-example table-type="ajax" order="14">

<css lib="datatables buttons select editor"/>
<js lib="jquery datatables buttons select editor">
<![CDATA[


var editor; // use a global for the submit and return data rendering in the examples

$(document).ready(function() {
	editor = new $.fn.dataTable.Editor( {
		ajax: "../php/upload.php",
		table: "#example",
		fields: [ {
				label: "First name:",
				name: "first_name"
			}, {
				label: "Last name:",
				name: "last_name"
			}, {
				label: "Phone #:",
				name: "phone"
			}, {
				label: "City:",
				name: "city"
			}, {
				label: "Image:",
				name: "image",
				type: "upload",
				display: function ( file_id ) {
					return '<img src="'+editor.file( 'files', file_id ).web_path+'"/>';
				},
				clearText: "Clear",
				noImageText: 'No image'
			}
		]
	} );

	var table = $('#example').DataTable( {
		dom: "Bfrtip",
		ajax: "../php/upload.php",
		columns: [
			{ data: "first_name" },
			{ data: "last_name" },
			{ data: "phone" },
			{ data: "city" },
			{
				data: "image",
				render: function ( file_id ) {
					return file_id ?
						'<img src="'+editor.file( 'files', file_id ).web_path+'"/>' :
						null;
				},
				defaultContent: "No image",
				title: "Image"
			}
		],
		select: true,
		buttons: [
			{ extend: "create", editor: editor },
			{ extend: "edit",   editor: editor },
			{ extend: "remove", editor: editor }
		]
	} );
} );

]]>
</js>
<title lib="Editor">File upload</title>

<info><![CDATA[

This example shows Editor being used with the `e-field upload` fields type to give end users the ability to upload a file in the form. The `e-field upload` field type allows just a single file to be uploaded, while its companion input type `e-field uploadMany` provides the ability to have multiple files uploaded for a single field.

The upload options of Editor are extensively documented in the manual ([Javascript](//editor.datatables.net/manual/upload), [PHP](//editor.datatables.net/manual/php/upload), [.NET](//editor.datatables.net/manual/net/upload) and [NodeJS](//editor.datatables.net/manual/node/upload)) and details the various options available.

In this example an image file can be uploaded, limited to 500KB using server-side validation. To display the image a simple `-tag img` tag is used, with information about the file to be displayed retrieved using the `e-api file()` method which Editor makes available and is automatically populated based on the server-side configuration.

]]></info>

<custom-table>
	<table id="example" class="display" cellspacing="0" width="100%">
		<thead>
			<tr>
				<th>First name</th>
				<th>Last name</th>
				<th>Phone #</th>
				<th>City</th>
				<th>Image</th>
			</tr>
		</thead>

		<tfoot>
			<tr>
				<th>First name</th>
				<th>Last name</th>
				<th>Phone #</th>
				<th>City</th>
				<th>Image</th>
			</tr>
		</tfoot>
	</table>
</custom-table>

</dt-example>

