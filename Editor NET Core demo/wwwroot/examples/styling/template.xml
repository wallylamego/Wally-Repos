<?xml version="1.0" encoding="UTF-8" ?>
<dt-example table-type="ajax" order="12">

<css lib="datatables buttons select editor">
<![CDATA[
#customForm {
	display: flex;
	flex-flow: row wrap;
}

#customForm fieldset {
	flex: 1;
	border: 1px solid #aaa;
	margin: 0.5em;
}

#customForm fieldset legend {
	padding: 5px 20px;
	border: 1px solid #aaa;
	font-weight: bold;
}

#customForm fieldset.name {
	flex: 2 100%;
}

#customForm fieldset.name legend {
	background: #bfffbf;
}

#customForm fieldset.office legend {
	background: #ffffbf;
}

#customForm fieldset.hr legend {
	background: #ffbfbf;
}

#customForm div.DTE_Field {
	padding: 5px;
}
]]>
</css>
<js lib="jquery datatables buttons select editor">
<![CDATA[

var editor; // use a global for the submit and return data rendering in the examples

$(document).ready(function() {
	editor = new $.fn.dataTable.Editor( {
		ajax: "../php/staff.php",
		table: "#example",
		template: '#customForm',
		fields: [ {
				label: "First name:",
				name: "first_name"
			}, {
				label: "Last name:",
				name: "last_name"
			}, {
				label: "Position:",
				name: "position"
			}, {
				label: "Office:",
				name: "office"
			}, {
				label: "Extension:",
				name: "extn"
			}, {
				label: "Start date:",
				name: "start_date",
				type: "datetime"
			}, {
				label: "Salary:",
				name: "salary"
			}
		]
	} );

	$('#example').DataTable( {
		dom: "Bfrtip",
		ajax: "../php/staff.php",
		columns: [
			{ data: null, render: function ( data, type, row ) {
				// Combine the first and last names into a single table field
				return data.first_name+' '+data.last_name;
			} },
			{ data: "position" },
			{ data: "office" },
			{ data: "extn" },
			{ data: "start_date" },
			{ data: "salary", render: $.fn.dataTable.render.number( ',', '.', 0, '$' ) }
		],
		select: true,
		buttons: [
			{ extend: "create", editor: editor },
			{ extend: "edit",   editor: editor },
			{ extend: "remove", editor: editor }
		]
	} );
} );

]]>
</js>

<title lib="Editor">Custom form layout / templates</title>

<info><![CDATA[

Editor's default form layout is simple and works well for basic forms. However, for more complex forms, where you want to group data and lay the form out to make the best use of space, the simple linear layout doesn't work very well. To allow complex, custom, layouts Editor has [the option of using templates](//editor.datatables.net/manual/templates) through its `e-init template` option.

In this example a simple form is shown with mixed full column and two column layout inside grouping field sets. The template is defined in the HTML and a selector given to the `e-init template` option so Editor can make use of it.

HTML5 custom tags are used to indicate where Editor should place each field in the form - specifically `<editor-field/>` with an attribute of `name` which defines the name of the field (`e-init fields.name`).

Flex box is used for the layout in this example, although any custom HTML can be used and injected into Editor, including tabs, accordion and other advanced layout options.

]]></info>

<demo-html>
	<div id="customForm">
		<fieldset class="name">
			<legend>Name</legend>

			<editor-field name="first_name"> </editor-field>
			<editor-field name="last_name"> </editor-field>
		</fieldset>
		<fieldset class="office">
			<legend>Office</legend>

			<editor-field name="office"> </editor-field>
			<editor-field name="extn"> </editor-field>
		</fieldset>
		<fieldset class="hr">
			<legend>HR info</legend>

			<editor-field name="position"> </editor-field>
			<editor-field name="salary"> </editor-field>
			<editor-field name="start_date"> </editor-field>
		</fieldset>
	</div>
</demo-html>

</dt-example>

