<?xml version="1.0" encoding="UTF-8" ?>
<dt-example table-type="ajax" order="2">

<css lib="datatables buttons select editor"/>
<js lib="jquery datatables buttons select editor">
<![CDATA[

var editor; // use a global for the submit and return data rendering in the examples

$(document).ready(function() {
	editor = new $.fn.dataTable.Editor( {
		ajax: "../php/staff.php",
		table: "#example",
		fields: [ {
				label: "First name:",
				name: "first_name"
			}, {
				label: "Last name:",
				name: "last_name"
			}, {
				label: "Position:",
				name: "position"
			}, {
				label: "Office:",
				name: "office"
			}, {
				label: "Extension:",
				name: "extn"
			}, {
				label: "Start date:",
				name: "start_date",
				type: "datetime"
			}, {
				label: "Salary:",
				name: "salary"
			}
		]
	} );

	$('#example').on( 'click', 'tbody td:not(:first-child)', function (e) {
		editor.bubble( this );
	} );

	$('#example').DataTable( {
		dom: "Bfrtip",
		ajax: "../php/staff.php",
		columns: [
			{
				data: null,
				defaultContent: '',
				className: 'select-checkbox',
				orderable: false
			},
			{
				data: null,
				render: function ( data, type, row ) {
					// Combine the first and last names into a single table field
					return data.first_name+' '+data.last_name;
				},
				editField: ['first_name', 'last_name']
			},
			{ data: "position" },
			{ data: "office" },
			{ data: "start_date" },
			{ data: "salary", render: $.fn.dataTable.render.number( ',', '.', 0, '$' ) }
		],
		order: [ 1, 'asc' ],
		select: {
			style:    'os',
			selector: 'td:first-child'
		},
		buttons: [
			{ extend: "create", editor: editor },
			{ extend: "edit",   editor: editor },
			{ extend: "remove", editor: editor }
		]
	} );
} );

]]>
</js>

<title lib="Editor">Multiple fields in a bubble</title>

<info><![CDATA[

Bubble editing, as provided by `e-api bubble()` is typically used with a single field for rapid editing, however, it is also quite possible to display multiple fields in a bubble. This can be done by using the `editField` option in the DataTables column definition for the column and setting it to be an array of the field names you wish to edit.

This example shows the _Name_ column rendered in the DataTable as the first name and second name combined in a single column. If you click on that column, you will see that the two fields are shown individually as editable in the bubble interface. The remaining columns are individually editable fields.

]]></info>

<custom-table>
	<table id="example" class="display" cellspacing="0" width="100%">
		<thead>
			<tr>
				<th></th>
				<th>Name</th>
				<th>Position</th>
				<th>Office</th>
				<th>Start date</th>
				<th>Salary</th>
			</tr>
		</thead>
	</table>
</custom-table>

</dt-example>

