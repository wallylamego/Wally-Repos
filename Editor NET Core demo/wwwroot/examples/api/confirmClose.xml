<?xml version="1.0" encoding="UTF-8" ?>
<dt-example table-type="ajax" order="1">

<css lib="datatables buttons select editor" />
<js lib="jquery datatables buttons select editor">
<![CDATA[

var editor; // use a global for the submit and return data rendering in the examples

$(document).ready(function() {
	editor = new $.fn.dataTable.Editor( {
		ajax: "../php/staff.php",
		table: "#example",
		fields: [ {
				label: "First name:",
				name: "first_name"
			}, {
				label: "Last name:",
				name: "last_name"
			}, {
				label: "Position:",
				name: "position"
			}, {
				label: "Office:",
				name: "office"
			}, {
				label: "Extension:",
				name: "extn"
			}, {
				label: "Start date:",
				name: "start_date"
			}, {
				label: "Salary:",
				name: "salary"
			}
		]
	} );

	var openVals;
	editor
		.on( 'open', function () {
			// Store the values of the fields on open
			openVals = JSON.stringify( editor.get() );
			
			editor.on( 'preClose', function ( e ) {
				// On close, check if the values have changed and ask for closing confirmation if they have
				if ( openVals !== JSON.stringify( editor.get() ) ) {
					return confirm( 'You have unsaved changes. Are you sure you want to exit?' );
				}
			} )
		} )
		.on( 'postCreate postEdit close', function () {
			editor.off( 'preClose' );
		} );

	$('#example').DataTable( {
		dom: "Bfrtip",
		ajax: "../php/staff.php",
		columns: [
			{ data: null, render: function ( data, type, row ) {
				// Combine the first and last names into a single table field
				return data.first_name+' '+data.last_name;
			} },
			{ data: "position" },
			{ data: "office" },
			{ data: "extn" },
			{ data: "start_date" },
			{ data: "salary", render: $.fn.dataTable.render.number( ',', '.', 0, '$' ) }
		],
		select: true,
		buttons: [
			{ extend: "create", editor: editor },
			{ extend: "edit",   editor: editor },
			{ extend: "remove", editor: editor }
		]
	} );
} );

]]>
</js>

<title lib="Editor">Events - unsaved changes close confirmation</title>

<info><![CDATA[

When editing large forms it can be frustrating if the form were to be accidentally closed by clicking on the background before submitting the changes. To address this, you can use the events provided by Editor to check if a user has closed the form without saving changes, and ask them to confirm if this is what they want to do.

This is done by using the `e-event open` and `e-event preBlur` events, in combination with the `e-api get()`. When passed no parameters this API method will give you the values for all fields in the form, as an object. As such, when the form is opened (`e-event open`) the values of the form in that opening state can easily be saved for comparison later.

Later, when the form is closed by clicking on the page background the `e-event preBlur` event is emitted and allows you to cancel the closing action by returning `false` from the event handler's function (note that `e-event preClose` could also be used, and would be activated by a click on the close icon as well).

At this point a simple comparison can be performed using `e-api get()`'s current return value and the values that were previously saved allowing us to ask the user if they really want to discard their changes.

]]></info>

</dt-example>

